import { RefObject } from 'react';
import { ToolDirective } from '../../utils/content-help';
import { ToolbarProps } from './';
import { HoverData } from './TableShape';
export declare const useSreenfull: (props: ToolbarProps) => {
    fullscreenHandler: (status?: boolean) => void;
};
export declare const useModals: (uploadRef: RefObject<HTMLInputElement>, emitHandler: (direct: ToolDirective, params?: any) => void) => {
    modalData: {
        type: 'link' | 'image';
        linkVisible: boolean;
        clipVisible: boolean;
    };
    setModalData: import("react").Dispatch<import("react").SetStateAction<{
        type: 'link' | 'image';
        linkVisible: boolean;
        clipVisible: boolean;
    }>>;
    onCancel: () => void;
    onOk: (data: any) => void;
};
export declare const useDropdownState: (emitHandler: (direct: ToolDirective, params?: any) => void) => {
    visible: {
        title: boolean;
        catalog: boolean;
        image: boolean;
        table: boolean;
        mermaid: boolean;
        katex: boolean;
    };
    onTitleChange: (v: boolean) => void;
    onTitleClose: () => void;
    onImageChange: (v: boolean) => void;
    onImageClose: () => void;
    onTableChange: (v: boolean) => void;
    onTableSelected: (selectedShape: HoverData) => void;
    onMermaidChange: (v: boolean) => void;
    onMermaidClose: () => void;
    onKatexChange: (v: boolean) => void;
    onKatexClose: () => void;
};
