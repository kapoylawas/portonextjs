var ur = Object.defineProperty;
var mr = (e, r, i) => r in e ? ur(e, r, { enumerable: !0, configurable: !0, writable: !0, value: i }) : e[r] = i;
var ce = (e, r, i) => (mr(e, typeof r != "symbol" ? r + "" : r, i), i);
import { j as a, a as F, F as $e } from "./jsx-runtime.mjs";
import Ne, { useState as D, useEffect as T, useMemo as O, useCallback as A, useImperativeHandle as hr, useRef as V, cloneElement as gr, useContext as U, createContext as fr, forwardRef as br } from "react";
import { b as w, a as pr, u as kr, g as vr, c as Se, M as Cr } from "./index.mjs";
import { a as j, b as Dt, p as s, e as Pt, i as $r, f as Rt, h as wr, s as xe, g as lr, d as S, j as yr, m as Tr, k as Ft, l as xr } from "./config.mjs";
import { a as X, M as or, u as Nr } from "./index2.mjs";
import { linkTo as Sr, debounce as Hr, throttle as Mr, smoothScroll as _t } from "@vavt/util";
import Lr from "medium-zoom";
import Ir from "copy-to-clipboard";
import Er from "markdown-it";
import Ar from "markdown-it-image-figures";
import Dr from "markdown-it-task-lists";
import Pr from "lru-cache";
import { minimalSetup as Rr, EditorView as ve } from "codemirror";
import { placeholder as Fr, EditorView as He, keymap as _r } from "@codemirror/view";
import { languages as Or } from "@codemirror/language-data";
import { markdown as Vr } from "@codemirror/lang-markdown";
import { deleteLine as Br, indentWithTab as jr, undo as Ur, redo as qr } from "@codemirror/commands";
import { EditorSelection as oe, EditorState as we, Compartment as Kr, StateEffect as Gr } from "@codemirror/state";
import { indentUnit as zr, HighlightStyle as ir, syntaxHighlighting as ar } from "@codemirror/language";
import { tags as g } from "@lezer/highlight";
import { autocompletion as Wr } from "@codemirror/autocomplete";
const pe = "onSave", Me = "changeCatalogVisible", cr = "changeFullscreen", Ot = "pageFullscreenChanged", Vt = "fullscreenChanged", Bt = "previewChanged", jt = "htmlPreviewChanged", Ut = "catalogVisibleChanged", sr = "textareaFocus", Zr = (e, r) => {
  const { modelValue: i } = e, { editorId: t } = r, [n, o] = D({
    // 是否已编译成html
    buildFinished: !1,
    // 存储当前最新的html
    html: ""
  });
  T(() => {
    const d = (l) => {
      o(() => ({
        buildFinished: !0,
        html: l
      }));
    };
    return w.on(t, {
      name: "buildFinished",
      callback: d
    }), () => {
      w.remove(t, "buildFinished", d);
    };
  }, []), T(() => {
    const d = () => {
      if (e.onSave) {
        const l = new Promise((u) => {
          if (n.buildFinished)
            u(n.html);
          else {
            const h = (c) => {
              u(c), w.remove(t, "buildFinished", h);
            };
            w.on(t, {
              name: "buildFinished",
              callback: h
            });
          }
        });
        e.onSave(e.modelValue, l);
      }
    };
    return w.on(t, {
      name: pe,
      callback: d
    }), () => {
      w.remove(t, pe, d);
    };
  }, [i, e, n.buildFinished, n.html]), T(() => {
    o((d) => ({
      ...d,
      buildFinished: !1
    }));
  }, [i]);
}, Yr = (e) => {
  var l, u, h, c, m, $;
  const { noPrettier: r, noUploadImg: i } = e, { editorExtensions: t } = j, n = r || !!((u = (l = j.editorExtensions) == null ? void 0 : l.prettier) != null && u.prettierInstance), o = r || !!((c = (h = j.editorExtensions) == null ? void 0 : h.prettier) != null && c.parserMarkdownInstance), d = i || !!(($ = (m = j.editorExtensions) == null ? void 0 : m.cropper) != null && $.instance);
  T(() => {
    var p, v, y, H;
    const C = document.createElement("script"), k = document.createElement("script");
    C.src = ((p = t == null ? void 0 : t.prettier) == null ? void 0 : p.standaloneJs) || Dt.main, C.id = `${s}-prettier`, k.src = ((v = t == null ? void 0 : t.prettier) == null ? void 0 : v.parserMarkdownJs) || Dt.markdown, k.id = `${s}-prettierMD`;
    const b = document.createElement("link");
    b.rel = "stylesheet", b.href = ((y = t == null ? void 0 : t.cropper) == null ? void 0 : y.css) || Pt.css, b.id = `${s}-cropperCss`;
    const f = document.createElement("script");
    f.src = ((H = t == null ? void 0 : t.cropper) == null ? void 0 : H.js) || Pt.js, f.id = `${s}-cropper`, d || (X(b), X(f)), n || X(C), o || X(k);
  }, []), Jr(e);
}, Jr = ({ noIconfont: e }) => {
  T(() => {
    var i;
    const r = document.createElement("script");
    r.src = ((i = j.editorExtensions) == null ? void 0 : i.iconfont) || $r, r.id = `${s}-icon`, e || X(r);
  }, []);
}, Xr = (e, r) => {
  T(() => (w.on(e, {
    name: "errorCatcher",
    callback: r
  }), () => {
    w.remove(e, "errorCatcher", r);
  }), [r]);
}, Qr = (e, r) => {
  const { editorId: i } = r;
  T(() => {
    const t = (n, o) => {
      const d = (l) => {
        w.emit(i, "replace", "image", {
          desc: "",
          urls: l
        }), o && o();
      };
      e.onUploadImg && e.onUploadImg(n, d);
    };
    return w.on(i, {
      name: "uploadImage",
      callback: t
    }), () => {
      w.remove(i, "uploadImage", t);
    };
  }, [e.onUploadImg]);
}, en = (e, r) => {
  const { toolbars: i = lr, toolbarsExclude: t = [] } = e, { editorId: n } = r, [o, d] = D(!1);
  return T(() => {
    w.on(n, {
      name: Me,
      callback: (u) => {
        d(u === void 0 ? (h) => !h : u);
      }
    });
  }, []), O(() => !t.includes("catalog") && i.includes("catalog") && o, [o, i, t]);
};
let qt = "";
const tn = (e) => {
  const {
    theme: r = S.theme,
    preview: i = S.preview,
    htmlPreview: t = S.htmlPreview,
    pageFullscreen: n = S.pageFullscreen,
    previewTheme: o = S.previewTheme,
    codeTheme: d = S.codeTheme,
    language: l = S.language,
    codeStyleReverse: u = S.codeStyleReverse,
    codeStyleReverseList: h = S.codeStyleReverseList
  } = e, c = O(() => {
    var v, y;
    const b = (y = (v = j) == null ? void 0 : v.editorExtensions) == null ? void 0 : y.highlight, f = {
      ...Rt,
      ...b == null ? void 0 : b.css
    }, p = u && h.includes(o) ? "dark" : r;
    return {
      js: (b == null ? void 0 : b.js) || wr,
      css: f[d] ? f[d][p] : Rt.atom[p]
    };
  }, [u, h, o, r, d]), m = O(() => {
    var f, p;
    const b = {
      ...xe,
      ...(p = (f = j) == null ? void 0 : f.editorConfig) == null ? void 0 : p.languageUserDefined
    };
    return b[l] ? b[l] : xe["zh-CN"];
  }, [l]), [$, C] = D({
    pageFullscreen: n,
    fullscreen: !1,
    preview: i,
    htmlPreview: i ? !1 : t
  }), k = A((b, f) => {
    C((p) => {
      const v = {
        ...p,
        [b]: f === void 0 ? !p[b] : f
      };
      return b === "fullscreen" && (f || p.fullscreen ? v.fullscreen = !p[b] : v.fullscreen = p[b]), b === "preview" && v.preview ? v.htmlPreview = !1 : b === "htmlPreview" && v.htmlPreview && (v.preview = !1), v;
    });
  }, []);
  return T(() => {
    qt = document.body.style.overflow;
  }, []), T(() => {
    $.pageFullscreen || $.fullscreen ? document.body.style.overflow = "hidden" : document.body.style.overflow = qt;
  }, [$.pageFullscreen, $.fullscreen]), [c, m, $, k];
}, rn = (e, r, i, t, n) => {
  const { editorId: o } = r;
  T(() => {
    w.emit(o, Ot, t.pageFullscreen);
  }, [t.pageFullscreen]), T(() => {
    w.emit(o, Vt, t.fullscreen);
  }, [t.fullscreen]), T(() => {
    w.emit(o, Bt, t.preview);
  }, [t.preview]), T(() => {
    w.emit(o, jt, t.htmlPreview);
  }, [t.htmlPreview]), T(() => {
    w.emit(o, Ut, i);
  }, [i]), hr(
    e,
    () => ({
      on(l, u) {
        switch (l) {
          case "pageFullscreen": {
            w.on(o, {
              name: Ot,
              callback(h) {
                u(h);
              }
            });
            break;
          }
          case "fullscreen": {
            w.on(o, {
              name: Vt,
              callback(h) {
                u(h);
              }
            });
            break;
          }
          case "preview": {
            w.on(o, {
              name: Bt,
              callback(h) {
                u(h);
              }
            });
            break;
          }
          case "htmlPreview": {
            w.on(o, {
              name: jt,
              callback(h) {
                u(h);
              }
            });
            break;
          }
          case "catalog": {
            w.on(o, {
              name: Ut,
              callback(h) {
                u(h);
              }
            });
            break;
          }
        }
      },
      togglePageFullscreen(l) {
        n("pageFullscreen", l);
      },
      toggleFullscreen(l) {
        w.emit(o, cr, l);
      },
      togglePreview(l) {
        n("preview", l);
      },
      toggleHtmlPreview(l) {
        n("htmlPreview", l);
      },
      toggleCatalog(l) {
        w.emit(o, Me, l);
      },
      triggerSave() {
        w.emit(o, pe);
      },
      insert(l) {
        w.emit(o, "replace", "universal", { generate: l });
      },
      focus(l) {
        w.emit(o, sr, l);
      }
    }),
    // eslint-disable-next-line react-hooks/exhaustive-deps
    [n]
  );
}, nn = () => /* @__PURE__ */ a("div", { className: `${s}-divider` }), Kt = `${s}-dropdown-hidden`, ue = (e) => {
  const [r, i] = D({
    overlayClass: Kt,
    overlayStyle: {}
  }), t = V({
    triggerHover: !1,
    overlayHover: !1
  }), n = V(null), o = V(null), d = A(() => {
    var L;
    e.trigger === "hover" && (t.current.triggerHover = !0);
    const b = n.current, f = o.current, p = b.getBoundingClientRect(), v = b.offsetTop, y = b.offsetLeft, H = p.height, N = p.width, x = ((L = document.querySelector(e.relative)) == null ? void 0 : L.scrollLeft) || 0;
    i((E) => ({
      ...E,
      overlayStyle: {
        top: v + H + "px",
        left: y - f.offsetWidth / 2 + N / 2 - x + "px"
      }
    })), e.onChange(!0);
  }, [e]), l = () => {
    t.current.overlayHover = !0;
  };
  T(() => {
    e.visible ? i((b) => ({
      ...b,
      overlayClass: ""
    })) : i((b) => ({
      ...b,
      overlayClass: Kt
    }));
  }, [e.visible]);
  const u = A(
    (b) => {
      const f = n.current, p = o.current;
      !f.contains(b.target) && !p.contains(b.target) && e.onChange(!1);
    },
    [e]
  ), h = V(-1), c = A(
    (b) => {
      n.current === b.target ? t.current.triggerHover = !1 : t.current.overlayHover = !1, clearTimeout(h.current), h.current = window.setTimeout(() => {
        !t.current.overlayHover && !t.current.triggerHover && e.onChange(!1);
      }, 10);
    },
    [e]
  );
  T(() => (e.trigger === "click" ? (n.current.addEventListener("click", d), document.addEventListener("click", u)) : (n.current.addEventListener("mouseenter", d), n.current.addEventListener("mouseleave", c), o.current.addEventListener("mouseenter", l), o.current.addEventListener("mouseleave", c)), () => {
    e.trigger === "click" && n.current ? (n.current.removeEventListener("click", d), document.removeEventListener("click", u)) : (n.current && (n.current.removeEventListener(
      "mouseenter",
      d
    ), n.current.removeEventListener(
      "mouseleave",
      c
    )), o.current && (o.current.removeEventListener(
      "mouseenter",
      l
    ), o.current.removeEventListener(
      "mouseleave",
      c
    )));
  }), [u, c, e.trigger, d]);
  const m = e.children, $ = e.overlay, C = gr(m, {
    ref: n
  }), k = /* @__PURE__ */ a(
    "div",
    {
      className: `${s}-dropdown ${r.overlayClass}`,
      style: r.overlayStyle,
      ref: o,
      children: /* @__PURE__ */ a("div", { className: `${s}-dropdown-overlay`, children: $ instanceof Array ? $[0] : $ })
    }
  );
  return /* @__PURE__ */ F($e, { children: [
    C,
    k
  ] });
};
ue.defaultProps = {
  trigger: "hover",
  relative: "html"
};
const ln = (e) => {
  var d, l, u, h, c;
  const { editorId: r, usedLanguageText: i } = U(B), t = O(() => {
    var m, $;
    switch (e.type) {
      case "link":
        return (m = i.linkModalTips) == null ? void 0 : m.linkTitle;
      case "image":
        return ($ = i.linkModalTips) == null ? void 0 : $.imageTitle;
      default:
        return "";
    }
  }, [e.type, i]), [n, o] = D({
    desc: "",
    url: ""
  });
  return T(() => {
    e.visible || setTimeout(() => {
      o({
        desc: "",
        url: ""
      });
    }, 200);
  }, [e.visible]), O(() => {
    var m, $, C, k, b;
    return /* @__PURE__ */ F(or, { title: t, visible: e.visible, onClose: e.onCancel, children: [
      /* @__PURE__ */ F("div", { className: `${s}-form-item`, children: [
        /* @__PURE__ */ a("label", { className: `${s}-label`, htmlFor: `link-desc-${r}`, children: (m = i.linkModalTips) == null ? void 0 : m.descLabel }),
        /* @__PURE__ */ a(
          "input",
          {
            placeholder: ($ = i.linkModalTips) == null ? void 0 : $.descLabelPlaceHolder,
            className: `${s}-input`,
            id: `link-desc-${r}`,
            type: "text",
            value: n.desc,
            onChange: (f) => {
              o((p) => ({
                ...p,
                desc: f.target.value
              }));
            }
          }
        )
      ] }),
      /* @__PURE__ */ F("div", { className: `${s}-form-item`, children: [
        /* @__PURE__ */ a("label", { className: `${s}-label`, htmlFor: `link-url-${r}`, children: (C = i.linkModalTips) == null ? void 0 : C.urlLabel }),
        /* @__PURE__ */ a(
          "input",
          {
            placeholder: (k = i.linkModalTips) == null ? void 0 : k.urlLabelPlaceHolder,
            className: `${s}-input`,
            id: `link-url-${r}`,
            type: "text",
            value: n.url,
            onChange: (f) => {
              o((p) => ({
                ...p,
                url: f.target.value
              }));
            }
          }
        )
      ] }),
      /* @__PURE__ */ a("div", { className: `${s}-form-item`, children: /* @__PURE__ */ a(
        "button",
        {
          className: `${s}-btn ${s}-btn-row`,
          type: "button",
          onClick: () => {
            e.onOk(n), o((f) => ({
              ...f,
              desc: "",
              url: ""
            }));
          },
          children: (b = i.linkModalTips) == null ? void 0 : b.buttonOK
        }
      ) })
    ] });
  }, [
    t,
    e,
    (d = i.linkModalTips) == null ? void 0 : d.descLabel,
    (l = i.linkModalTips) == null ? void 0 : l.descLabelPlaceHolder,
    (u = i.linkModalTips) == null ? void 0 : u.urlLabel,
    (h = i.linkModalTips) == null ? void 0 : h.urlLabelPlaceHolder,
    (c = i.linkModalTips) == null ? void 0 : c.buttonOK,
    n
  ]);
}, on = ln;
let re = null;
const an = (e) => {
  var C, k, b, f;
  const r = U(B), { editorId: i, usedLanguageText: t } = r, n = (k = (C = j.editorExtensions) == null ? void 0 : C.cropper) == null ? void 0 : k.instance, o = V(null), d = V(null), l = V(null), [u, h] = D({
    cropperInited: !1,
    imgSelected: !1,
    imgSrc: "",
    // 是否全屏
    isFullscreen: !1
  });
  T(() => {
    e.visible && !u.cropperInited && (window.Cropper = n || window.Cropper, o.current.onchange = () => {
      if (!window.Cropper) {
        w.emit(i, "errorCatcher", {
          name: "Cropper",
          message: "Cropper is undefined"
        });
        return;
      }
      const p = o.current.files || [];
      if ((p == null ? void 0 : p.length) > 0) {
        const v = new FileReader();
        v.onload = (y) => {
          h((H) => ({
            ...H,
            imgSelected: !0,
            imgSrc: y.target.result
          }));
        }, v.readAsDataURL(p[0]);
      }
    });
  }, [e.visible, u.cropperInited]), T(() => {
    u.imgSrc && (re = new window.Cropper(d.current, {
      viewMode: 2,
      preview: `.${s}-clip-preview-target`
      // aspectRatio: 16 / 9,
    }));
  }, [u.imgSrc]), T(() => {
    var p;
    (p = l.current) == null || p.setAttribute("style", "");
  }, [u.imgSelected]), T(() => {
    var p;
    re == null || re.destroy(), (p = l.current) == null || p.setAttribute("style", ""), d.current && (re = new window.Cropper(d.current, {
      viewMode: 2,
      preview: `.${s}-clip-preview-target`
      // aspectRatio: 16 / 9,
    }));
  }, [u.isFullscreen]);
  const c = O(() => u.isFullscreen ? {
    width: "100%",
    height: "100%"
  } : {
    width: "668px",
    height: "392px"
  }, [u.isFullscreen]), m = () => {
    re.clear(), re.destroy(), re = null, o.current.value = "", h((p) => ({
      ...p,
      imgSrc: "",
      imgSelected: !1
    }));
  }, $ = A((p) => {
    h((v) => ({
      ...v,
      isFullscreen: p
    }));
  }, []);
  return O(() => {
    var p, v;
    return /* @__PURE__ */ F(
      or,
      {
        className: `${s}-modal-clip`,
        title: (p = t.clipModalTips) == null ? void 0 : p.title,
        visible: e.visible,
        onClose: e.onCancel,
        showAdjust: !0,
        isFullscreen: u.isFullscreen,
        onAdjust: $,
        ...c,
        children: [
          /* @__PURE__ */ F("div", { className: `${s}-form-item ${s}-clip`, children: [
            /* @__PURE__ */ a("div", { className: `${s}-clip-main`, children: u.imgSelected ? /* @__PURE__ */ F("div", { className: `${s}-clip-cropper`, children: [
              /* @__PURE__ */ a(
                "img",
                {
                  src: u.imgSrc,
                  ref: d,
                  style: { display: "none" },
                  alt: ""
                }
              ),
              /* @__PURE__ */ a("div", { className: `${s}-clip-delete`, onClick: m, children: /* @__PURE__ */ a("svg", { className: `${s}-icon`, "aria-hidden": "true", children: /* @__PURE__ */ a("use", { xlinkHref: "#md-editor-icon-delete" }) }) })
            ] }) : /* @__PURE__ */ a(
              "div",
              {
                className: `${s}-clip-upload`,
                onClick: () => {
                  o.current.click();
                },
                children: /* @__PURE__ */ a("svg", { className: `${s}-icon`, "aria-hidden": "true", children: /* @__PURE__ */ a("use", { xlinkHref: "#md-editor-icon-upload" }) })
              }
            ) }),
            /* @__PURE__ */ a("div", { className: `${s}-clip-preview`, children: /* @__PURE__ */ a("div", { className: `${s}-clip-preview-target`, ref: l }) })
          ] }),
          /* @__PURE__ */ a("div", { className: `${s}-form-item`, children: /* @__PURE__ */ a(
            "button",
            {
              className: `${s}-btn`,
              type: "button",
              onClick: () => {
                if (re) {
                  const y = re.getCroppedCanvas();
                  w.emit(
                    i,
                    "uploadImage",
                    [pr(y.toDataURL("image/png"))],
                    e.onOk
                  ), m();
                }
              },
              children: (v = t.linkModalTips) == null ? void 0 : v.buttonOK
            }
          ) }),
          /* @__PURE__ */ a(
            "input",
            {
              ref: o,
              accept: "image/*",
              type: "file",
              multiple: !1,
              style: { display: "none" }
            }
          )
        ]
      }
    );
  }, [
    (b = t.clipModalTips) == null ? void 0 : b.title,
    (f = t.linkModalTips) == null ? void 0 : f.buttonOK,
    e.visible,
    e.onCancel,
    e.onOk,
    u.isFullscreen,
    u.imgSelected,
    u.imgSrc,
    $,
    c
  ]);
}, cn = an, sn = (e) => /* @__PURE__ */ F($e, { children: [
  /* @__PURE__ */ a(
    on,
    {
      type: e.type,
      visible: e.linkVisible,
      onOk: e.onOk,
      onCancel: e.onCancel
    }
  ),
  /* @__PURE__ */ a(
    cn,
    {
      visible: e.clipVisible,
      onOk: e.onOk,
      onCancel: e.onCancel
    }
  )
] }), dn = sn, un = (e) => {
  const [r, i] = D({
    x: -1,
    y: -1
  });
  return /* @__PURE__ */ a(
    "div",
    {
      className: `${s}-table-shape`,
      onMouseLeave: () => {
        i({
          x: -1,
          y: -1
        });
      },
      children: new Array(e.tableShape[1]).fill("").map((t, n) => /* @__PURE__ */ a("div", { className: `${s}-table-shape-row`, children: new Array(e.tableShape[0]).fill("").map((o, d) => /* @__PURE__ */ a(
        "div",
        {
          className: `${s}-table-shape-col`,
          onMouseEnter: () => {
            i({
              x: n,
              y: d
            });
          },
          onClick: () => {
            e.onSelected(r);
          },
          children: /* @__PURE__ */ a(
            "div",
            {
              className: [
                `${s}-table-shape-col-default`,
                n <= r.x && d <= r.y && `${s}-table-shape-col-include`
              ].filter((l) => !!l).join(" ")
            }
          )
        },
        `table-shape-col-${d}`
      )) }, `table-shape-row-${n}`))
    }
  );
}, mn = un, hn = (e) => {
  var d;
  const { editorId: r } = U(B), i = (d = j.editorExtensions) == null ? void 0 : d.screenfull;
  let t = i == null ? void 0 : i.instance;
  const n = V(!1), o = A(
    (l) => {
      if (!t) {
        w.emit(r, "errorCatcher", {
          name: "fullscreen",
          message: "fullscreen is undefined"
        });
        return;
      }
      t.isEnabled ? (n.current = !0, (l === void 0 ? !t.isFullscreen : l) ? t.request() : t.exit()) : console.error("browser does not support screenfull!");
    },
    // eslint-disable-next-line react-hooks/exhaustive-deps
    []
  );
  return T(() => {
    let l;
    t || (l = document.createElement("script"), l.src = (i == null ? void 0 : i.js) || yr, l.onload = () => {
      t = window.screenfull, t && t.isEnabled && t.on("change", () => {
        e.updateSetting("fullscreen", n.current), n.current && (n.current = !1);
      });
    }, l.id = `${s}-screenfull`, X(l, "screenfull")), t && t.isEnabled && t.on("change", () => {
      e.updateSetting("fullscreen", n.current), n.current && (n.current = !1);
    });
  }, []), T(() => {
    w.on(r, {
      name: cr,
      callback: o
    });
  }, []), { fullscreenHandler: o };
}, gn = (e, r) => {
  const { editorId: i } = U(B), [t, n] = D({
    type: "link",
    linkVisible: !1,
    clipVisible: !1
  }), o = A(() => {
    n((l) => ({
      ...l,
      linkVisible: !1,
      clipVisible: !1
    }));
  }, []), d = A(
    (l) => {
      l && r(t.type, {
        desc: l.desc,
        url: l.url
      }), o();
    },
    [r, t.type, o]
  );
  return T(() => {
    w.on(i, {
      name: "openModals",
      callback(u) {
        n((h) => ({
          ...h,
          type: u,
          linkVisible: !0
        }));
      }
    });
    const l = () => {
      w.emit(
        i,
        "uploadImage",
        Array.from(e.current.files || [])
      ), e.current.value = "";
    };
    e.current.addEventListener("change", l);
  }, []), {
    modalData: t,
    setModalData: n,
    onCancel: o,
    onOk: d
  };
}, fn = (e) => {
  const [r, i] = D({
    title: !1,
    catalog: !1,
    // 图片上传下拉
    image: !1,
    // 表格预选
    table: !1,
    // mermaid
    mermaid: !1,
    katex: !1
  }), t = A((C) => {
    i((k) => ({
      ...k,
      title: C
    }));
  }, []), n = A(() => {
    i((C) => ({
      ...C,
      title: !1
    }));
  }, []), o = A((C) => {
    i((k) => ({
      ...k,
      image: C
    }));
  }, []), d = A(() => {
    i((C) => ({
      ...C,
      image: !1
    }));
  }, []), l = A((C) => {
    i((k) => ({
      ...k,
      table: C
    }));
  }, []), u = A(
    (C) => {
      e("table", { selectedShape: C });
    },
    [e]
  ), h = A((C) => {
    i((k) => ({
      ...k,
      mermaid: C
    }));
  }, []), c = A(() => {
    i((C) => ({
      ...C,
      mermaid: !1
    }));
  }, []), m = A((C) => {
    i((k) => ({
      ...k,
      katex: C
    }));
  }, []), $ = A(() => {
    i((C) => ({
      ...C,
      katex: !1
    }));
  }, []);
  return {
    visible: r,
    onTitleChange: t,
    onTitleClose: n,
    onImageChange: o,
    onImageClose: d,
    onTableChange: l,
    onTableSelected: u,
    onMermaidChange: h,
    onMermaidClose: c,
    onKatexChange: m,
    onKatexClose: $
  };
};
let bn = 0;
const pn = (e) => {
  var ee, J, te, z, W, me, ke, Le, Ie, Ee, Ae, De, Pe, Re, Fe, _e, Oe, Ve, Be, je, Ue, qe, Ke, Ge, ze, We, Ze, Ye, Je, Xe, Qe, et, tt, rt, nt, lt, ot, it, at, ct, st, dt, ut, mt, ht, gt, ft, bt;
  const { toolbars: r, toolbarsExclude: i, setting: t, updateSetting: n } = e, { editorId: o, usedLanguageText: d } = U(B), l = d, [u] = D(() => `${o}-toolbar-wrapper`), h = V(null), c = A((I, R) => {
    w.emit(o, "replace", I, R);
  }, []), { fullscreenHandler: m } = hn(e), { modalData: $, setModalData: C, onCancel: k, onOk: b } = gn(h, c), {
    visible: f,
    onTitleChange: p,
    onTitleClose: v,
    onImageChange: y,
    onImageClose: H,
    onTableChange: N,
    onTableSelected: x,
    onMermaidChange: L,
    onMermaidClose: E,
    onKatexChange: P,
    onKatexClose: K
  } = fn(c), G = O(() => {
    var I, R, q, Z, _, ie, ae;
    return /* @__PURE__ */ a(
      ue,
      {
        relative: `#${u}`,
        visible: f.title,
        onChange: p,
        overlay: /* @__PURE__ */ F("ul", { className: `${s}-menu`, onClick: v, children: [
          /* @__PURE__ */ a(
            "li",
            {
              className: `${s}-menu-item`,
              onClick: () => {
                c("h1");
              },
              children: (I = l.titleItem) == null ? void 0 : I.h1
            }
          ),
          /* @__PURE__ */ a(
            "li",
            {
              className: `${s}-menu-item`,
              onClick: () => {
                c("h2");
              },
              children: (R = l.titleItem) == null ? void 0 : R.h2
            }
          ),
          /* @__PURE__ */ a(
            "li",
            {
              className: `${s}-menu-item`,
              onClick: () => {
                c("h3");
              },
              children: (q = l.titleItem) == null ? void 0 : q.h3
            }
          ),
          /* @__PURE__ */ a(
            "li",
            {
              className: `${s}-menu-item`,
              onClick: () => {
                c("h4");
              },
              children: (Z = l.titleItem) == null ? void 0 : Z.h4
            }
          ),
          /* @__PURE__ */ a(
            "li",
            {
              className: `${s}-menu-item`,
              onClick: () => {
                c("h5");
              },
              children: (_ = l.titleItem) == null ? void 0 : _.h5
            }
          ),
          /* @__PURE__ */ a(
            "li",
            {
              className: `${s}-menu-item`,
              onClick: () => {
                c("h6");
              },
              children: (ie = l.titleItem) == null ? void 0 : ie.h6
            }
          )
        ] }),
        children: /* @__PURE__ */ a("div", { className: `${s}-toolbar-item`, title: (ae = l.toolbarTips) == null ? void 0 : ae.title, children: /* @__PURE__ */ a("svg", { className: `${s}-icon`, "aria-hidden": "true", children: /* @__PURE__ */ a("use", { xlinkHref: "#md-editor-icon-title" }) }) })
      },
      "bar-title"
    );
  }, [
    u,
    f.title,
    p,
    v,
    (ee = l.titleItem) == null ? void 0 : ee.h1,
    (J = l.titleItem) == null ? void 0 : J.h2,
    (te = l.titleItem) == null ? void 0 : te.h3,
    (z = l.titleItem) == null ? void 0 : z.h4,
    (W = l.titleItem) == null ? void 0 : W.h5,
    (me = l.titleItem) == null ? void 0 : me.h6,
    (ke = l.toolbarTips) == null ? void 0 : ke.title,
    c
  ]), M = O(() => {
    var I, R, q, Z;
    return /* @__PURE__ */ a(
      ue,
      {
        relative: `#${u}`,
        visible: f.image,
        onChange: y,
        overlay: /* @__PURE__ */ F("ul", { className: `${s}-menu`, onClick: H, children: [
          /* @__PURE__ */ a(
            "li",
            {
              className: `${s}-menu-item`,
              onClick: () => {
                C((_) => ({
                  ..._,
                  type: "image",
                  linkVisible: !0
                }));
              },
              children: (I = l.imgTitleItem) == null ? void 0 : I.link
            }
          ),
          /* @__PURE__ */ a(
            "li",
            {
              className: `${s}-menu-item`,
              onClick: () => {
                h.current.click();
              },
              children: (R = l.imgTitleItem) == null ? void 0 : R.upload
            }
          ),
          /* @__PURE__ */ a(
            "li",
            {
              className: `${s}-menu-item`,
              onClick: () => {
                C((_) => ({
                  ..._,
                  type: "image",
                  clipVisible: !0
                }));
              },
              children: (q = l.imgTitleItem) == null ? void 0 : q.clip2upload
            }
          )
        ] }),
        children: /* @__PURE__ */ a("div", { className: `${s}-toolbar-item`, title: (Z = l.toolbarTips) == null ? void 0 : Z.image, children: /* @__PURE__ */ a("svg", { className: `${s}-icon`, "aria-hidden": "true", children: /* @__PURE__ */ a("use", { xlinkHref: "#md-editor-icon-image" }) }) })
      },
      "bar-image"
    );
  }, [
    u,
    f.image,
    y,
    H,
    (Le = l.imgTitleItem) == null ? void 0 : Le.link,
    (Ie = l.imgTitleItem) == null ? void 0 : Ie.upload,
    (Ee = l.imgTitleItem) == null ? void 0 : Ee.clip2upload,
    (Ae = l.toolbarTips) == null ? void 0 : Ae.image,
    C
  ]), Q = O(() => {
    var I;
    return /* @__PURE__ */ a(
      ue,
      {
        relative: `#${u}`,
        visible: f.table,
        onChange: N,
        overlay: /* @__PURE__ */ a(mn, { tableShape: e.tableShape, onSelected: x }),
        children: /* @__PURE__ */ a("div", { className: `${s}-toolbar-item`, title: (I = l.toolbarTips) == null ? void 0 : I.table, children: /* @__PURE__ */ a("svg", { className: `${s}-icon`, "aria-hidden": "true", children: /* @__PURE__ */ a("use", { xlinkHref: "#md-editor-icon-table" }) }) })
      },
      "bar-table"
    );
  }, [
    u,
    f.table,
    N,
    e.tableShape,
    x,
    (De = l.toolbarTips) == null ? void 0 : De.table
  ]), Y = O(() => {
    var I, R, q, Z, _, ie, ae, he, ge;
    return /* @__PURE__ */ a(
      ue,
      {
        relative: `#${u}`,
        visible: f.mermaid,
        onChange: L,
        overlay: /* @__PURE__ */ F("ul", { className: `${s}-menu`, onClick: E, children: [
          /* @__PURE__ */ a(
            "li",
            {
              className: `${s}-menu-item`,
              onClick: () => {
                c("flow");
              },
              children: (I = l.mermaid) == null ? void 0 : I.flow
            }
          ),
          /* @__PURE__ */ a(
            "li",
            {
              className: `${s}-menu-item`,
              onClick: () => {
                c("sequence");
              },
              children: (R = l.mermaid) == null ? void 0 : R.sequence
            }
          ),
          /* @__PURE__ */ a(
            "li",
            {
              className: `${s}-menu-item`,
              onClick: () => {
                c("gantt");
              },
              children: (q = l.mermaid) == null ? void 0 : q.gantt
            }
          ),
          /* @__PURE__ */ a(
            "li",
            {
              className: `${s}-menu-item`,
              onClick: () => {
                c("class");
              },
              children: (Z = l.mermaid) == null ? void 0 : Z.class
            }
          ),
          /* @__PURE__ */ a(
            "li",
            {
              className: `${s}-menu-item`,
              onClick: () => {
                c("state");
              },
              children: (_ = l.mermaid) == null ? void 0 : _.state
            }
          ),
          /* @__PURE__ */ a(
            "li",
            {
              className: `${s}-menu-item`,
              onClick: () => {
                c("pie");
              },
              children: (ie = l.mermaid) == null ? void 0 : ie.pie
            }
          ),
          /* @__PURE__ */ a(
            "li",
            {
              className: `${s}-menu-item`,
              onClick: () => {
                c("relationship");
              },
              children: (ae = l.mermaid) == null ? void 0 : ae.relationship
            }
          ),
          /* @__PURE__ */ a(
            "li",
            {
              className: `${s}-menu-item`,
              onClick: () => {
                c("journey");
              },
              children: (he = l.mermaid) == null ? void 0 : he.journey
            }
          )
        ] }),
        children: /* @__PURE__ */ a("div", { className: `${s}-toolbar-item`, title: (ge = l.toolbarTips) == null ? void 0 : ge.mermaid, children: /* @__PURE__ */ a("svg", { className: `${s}-icon`, "aria-hidden": "true", children: /* @__PURE__ */ a("use", { xlinkHref: "#md-editor-icon-mermaid" }) }) })
      },
      "bar-mermaid"
    );
  }, [
    u,
    f.mermaid,
    L,
    E,
    (Pe = l.mermaid) == null ? void 0 : Pe.flow,
    (Re = l.mermaid) == null ? void 0 : Re.sequence,
    (Fe = l.mermaid) == null ? void 0 : Fe.gantt,
    (_e = l.mermaid) == null ? void 0 : _e.class,
    (Oe = l.mermaid) == null ? void 0 : Oe.state,
    (Ve = l.mermaid) == null ? void 0 : Ve.pie,
    (Be = l.mermaid) == null ? void 0 : Be.relationship,
    (je = l.mermaid) == null ? void 0 : je.journey,
    (Ue = l.toolbarTips) == null ? void 0 : Ue.mermaid,
    c
  ]), se = O(() => {
    var I, R, q;
    return /* @__PURE__ */ a(
      ue,
      {
        relative: `#${u}`,
        visible: f.katex,
        onChange: P,
        overlay: /* @__PURE__ */ F("ul", { className: `${s}-menu`, onClick: K, children: [
          /* @__PURE__ */ a(
            "li",
            {
              className: `${s}-menu-item`,
              onClick: () => {
                c("katexInline");
              },
              children: (I = l.katex) == null ? void 0 : I.inline
            }
          ),
          /* @__PURE__ */ a(
            "li",
            {
              className: `${s}-menu-item`,
              onClick: () => {
                c("katexBlock");
              },
              children: (R = l.katex) == null ? void 0 : R.block
            }
          )
        ] }),
        children: /* @__PURE__ */ a("div", { className: `${s}-toolbar-item`, title: (q = l.toolbarTips) == null ? void 0 : q.katex, children: /* @__PURE__ */ a("svg", { className: `${s}-icon`, "aria-hidden": "true", children: /* @__PURE__ */ a("use", { xlinkHref: "#md-editor-icon-formula" }) }) })
      },
      "bar-katex"
    );
  }, [
    u,
    f.katex,
    P,
    K,
    (qe = l.katex) == null ? void 0 : qe.inline,
    (Ke = l.katex) == null ? void 0 : Ke.block,
    (Ge = l.toolbarTips) == null ? void 0 : Ge.katex,
    c
  ]), ne = A(
    (I) => {
      var R, q, Z, _, ie, ae, he, ge, pt, kt, vt, Ct, $t, wt, yt, Tt, xt, Nt, St, Ht, Mt, Lt, It, Et;
      if (lr.includes(I))
        switch (I) {
          case "-":
            return /* @__PURE__ */ a(nn, {}, `bar-${bn++}`);
          case "bold":
            return /* @__PURE__ */ a(
              "div",
              {
                className: `${s}-toolbar-item`,
                title: (R = l.toolbarTips) == null ? void 0 : R.bold,
                onClick: () => {
                  c("bold");
                },
                children: /* @__PURE__ */ a("svg", { className: `${s}-icon`, "aria-hidden": "true", children: /* @__PURE__ */ a("use", { xlinkHref: "#md-editor-icon-bold" }) })
              },
              "bar-bold"
            );
          case "underline":
            return /* @__PURE__ */ a(
              "div",
              {
                className: `${s}-toolbar-item`,
                title: (q = l.toolbarTips) == null ? void 0 : q.underline,
                onClick: () => {
                  c("underline");
                },
                children: /* @__PURE__ */ a("svg", { className: `${s}-icon`, "aria-hidden": "true", children: /* @__PURE__ */ a("use", { xlinkHref: "#md-editor-icon-underline" }) })
              },
              "bar-underline"
            );
          case "italic":
            return /* @__PURE__ */ a(
              "div",
              {
                className: `${s}-toolbar-item`,
                title: (Z = l.toolbarTips) == null ? void 0 : Z.italic,
                onClick: () => {
                  c("italic");
                },
                children: /* @__PURE__ */ a("svg", { className: `${s}-icon`, "aria-hidden": "true", children: /* @__PURE__ */ a("use", { xlinkHref: "#md-editor-icon-italic" }) })
              },
              "bar-italic"
            );
          case "strikeThrough":
            return /* @__PURE__ */ a(
              "div",
              {
                className: `${s}-toolbar-item`,
                title: (_ = l.toolbarTips) == null ? void 0 : _.strikeThrough,
                onClick: () => {
                  c("strikeThrough");
                },
                children: /* @__PURE__ */ a("svg", { className: `${s}-icon`, "aria-hidden": "true", children: /* @__PURE__ */ a("use", { xlinkHref: "#md-editor-icon-strike-through" }) })
              },
              "bar-strikeThrough"
            );
          case "title":
            return G;
          case "sub":
            return /* @__PURE__ */ a(
              "div",
              {
                className: `${s}-toolbar-item`,
                title: (ie = l.toolbarTips) == null ? void 0 : ie.sub,
                onClick: () => {
                  c("sub");
                },
                children: /* @__PURE__ */ a("svg", { className: `${s}-icon`, "aria-hidden": "true", children: /* @__PURE__ */ a("use", { xlinkHref: "#md-editor-icon-sub" }) })
              },
              "bar-sub"
            );
          case "sup":
            return /* @__PURE__ */ a(
              "div",
              {
                className: `${s}-toolbar-item`,
                title: (ae = l.toolbarTips) == null ? void 0 : ae.sup,
                onClick: () => {
                  c("sup");
                },
                children: /* @__PURE__ */ a("svg", { className: `${s}-icon`, "aria-hidden": "true", children: /* @__PURE__ */ a("use", { xlinkHref: "#md-editor-icon-sup" }) })
              },
              "bar-sup"
            );
          case "quote":
            return /* @__PURE__ */ a(
              "div",
              {
                className: `${s}-toolbar-item`,
                title: (he = l.toolbarTips) == null ? void 0 : he.quote,
                onClick: () => {
                  c("quote");
                },
                children: /* @__PURE__ */ a("svg", { className: `${s}-icon`, "aria-hidden": "true", children: /* @__PURE__ */ a("use", { xlinkHref: "#md-editor-icon-quote" }) })
              },
              "bar-quote"
            );
          case "unorderedList":
            return /* @__PURE__ */ a(
              "div",
              {
                className: `${s}-toolbar-item`,
                title: (ge = l.toolbarTips) == null ? void 0 : ge.unorderedList,
                onClick: () => {
                  c("unorderedList");
                },
                children: /* @__PURE__ */ a("svg", { className: `${s}-icon`, "aria-hidden": "true", children: /* @__PURE__ */ a("use", { xlinkHref: "#md-editor-icon-unordered-list" }) })
              },
              "bar-unorderedList"
            );
          case "orderedList":
            return /* @__PURE__ */ a(
              "div",
              {
                className: `${s}-toolbar-item`,
                title: (pt = l.toolbarTips) == null ? void 0 : pt.orderedList,
                onClick: () => {
                  c("orderedList");
                },
                children: /* @__PURE__ */ a("svg", { className: `${s}-icon`, "aria-hidden": "true", children: /* @__PURE__ */ a("use", { xlinkHref: "#md-editor-icon-ordered-list" }) })
              },
              "bar-orderedList"
            );
          case "task":
            return /* @__PURE__ */ a(
              "div",
              {
                className: `${s}-toolbar-item`,
                title: (kt = l.toolbarTips) == null ? void 0 : kt.task,
                onClick: () => {
                  c("task");
                },
                children: /* @__PURE__ */ a("svg", { className: `${s}-icon`, "aria-hidden": "true", children: /* @__PURE__ */ a("use", { xlinkHref: "#md-editor-icon-task" }) })
              },
              "bar-task"
            );
          case "codeRow":
            return /* @__PURE__ */ a(
              "div",
              {
                className: `${s}-toolbar-item`,
                title: (vt = l.toolbarTips) == null ? void 0 : vt.codeRow,
                onClick: () => {
                  c("codeRow");
                },
                children: /* @__PURE__ */ a("svg", { className: `${s}-icon`, "aria-hidden": "true", children: /* @__PURE__ */ a("use", { xlinkHref: "#md-editor-icon-code-row" }) })
              },
              "bar-codeRow"
            );
          case "code":
            return /* @__PURE__ */ a(
              "div",
              {
                className: `${s}-toolbar-item`,
                title: (Ct = l.toolbarTips) == null ? void 0 : Ct.code,
                onClick: () => {
                  c("code");
                },
                children: /* @__PURE__ */ a("svg", { className: `${s}-icon`, "aria-hidden": "true", children: /* @__PURE__ */ a("use", { xlinkHref: "#md-editor-icon-code" }) })
              },
              "bar-code"
            );
          case "link":
            return /* @__PURE__ */ a(
              "div",
              {
                className: `${s}-toolbar-item`,
                title: ($t = l.toolbarTips) == null ? void 0 : $t.link,
                onClick: () => {
                  C({
                    ...$,
                    type: "link",
                    linkVisible: !0
                  });
                },
                children: /* @__PURE__ */ a("svg", { className: `${s}-icon`, "aria-hidden": "true", children: /* @__PURE__ */ a("use", { xlinkHref: "#md-editor-icon-link" }) })
              },
              "bar-link"
            );
          case "image":
            return e.noUploadImg ? /* @__PURE__ */ a(
              "div",
              {
                className: `${s}-toolbar-item`,
                title: (wt = l.toolbarTips) == null ? void 0 : wt.image,
                onClick: () => {
                  C((At) => ({
                    ...At,
                    type: "image",
                    linkVisible: !0
                  }));
                },
                children: /* @__PURE__ */ a("svg", { className: `${s}-icon`, "aria-hidden": "true", children: /* @__PURE__ */ a("use", { xlinkHref: "#md-editor-icon-image" }) })
              },
              "bar-image-no-upload"
            ) : M;
          case "table":
            return Q;
          case "revoke":
            return /* @__PURE__ */ a(
              "div",
              {
                className: `${s}-toolbar-item`,
                title: (yt = l.toolbarTips) == null ? void 0 : yt.revoke,
                onClick: () => {
                  w.emit(o, "ctrlZ");
                },
                children: /* @__PURE__ */ a("svg", { className: `${s}-icon`, "aria-hidden": "true", children: /* @__PURE__ */ a("use", { xlinkHref: "#md-editor-icon-revoke" }) })
              },
              "bar-revoke"
            );
          case "next":
            return /* @__PURE__ */ a(
              "div",
              {
                className: `${s}-toolbar-item`,
                title: (Tt = l.toolbarTips) == null ? void 0 : Tt.next,
                onClick: () => {
                  w.emit(o, "ctrlShiftZ");
                },
                children: /* @__PURE__ */ a("svg", { className: `${s}-icon`, "aria-hidden": "true", children: /* @__PURE__ */ a("use", { xlinkHref: "#md-editor-icon-next" }) })
              },
              "bar-next"
            );
          case "save":
            return /* @__PURE__ */ a(
              "div",
              {
                className: `${s}-toolbar-item`,
                title: (xt = l.toolbarTips) == null ? void 0 : xt.save,
                onClick: () => {
                  w.emit(o, pe);
                },
                children: /* @__PURE__ */ a("svg", { className: `${s}-icon`, "aria-hidden": "true", children: /* @__PURE__ */ a("use", { xlinkHref: "#md-editor-icon-baocun" }) })
              },
              "bar-save"
            );
          case "prettier":
            return e.noPrettier ? "" : /* @__PURE__ */ a(
              "div",
              {
                className: `${s}-toolbar-item`,
                title: (Nt = l.toolbarTips) == null ? void 0 : Nt.prettier,
                onClick: () => {
                  c("prettier");
                },
                children: /* @__PURE__ */ a("svg", { className: `${s}-icon`, "aria-hidden": "true", children: /* @__PURE__ */ a("use", { xlinkHref: "#md-editor-icon-prettier" }) })
              },
              "bar-prettier"
            );
          case "pageFullscreen":
            return !t.fullscreen && /* @__PURE__ */ a(
              "div",
              {
                className: `${s}-toolbar-item`,
                title: (St = l.toolbarTips) == null ? void 0 : St.pageFullscreen,
                onClick: () => {
                  n("pageFullscreen");
                },
                children: /* @__PURE__ */ a("svg", { className: `${s}-icon`, "aria-hidden": "true", children: /* @__PURE__ */ a(
                  "use",
                  {
                    xlinkHref: `#md-editor-icon-${t.pageFullscreen ? "suoxiao" : "fangda"}`
                  }
                ) })
              },
              "bar-pageFullscreen"
            );
          case "fullscreen":
            return /* @__PURE__ */ a(
              "div",
              {
                className: `${s}-toolbar-item`,
                title: (Ht = l.toolbarTips) == null ? void 0 : Ht.fullscreen,
                onClick: () => {
                  m();
                },
                children: /* @__PURE__ */ a("svg", { className: `${s}-icon`, "aria-hidden": "true", children: /* @__PURE__ */ a(
                  "use",
                  {
                    xlinkHref: `#md-editor-icon-${t.fullscreen ? "fullscreen-exit" : "fullscreen"}`
                  }
                ) })
              },
              "bar-fullscreen"
            );
          case "catalog":
            return /* @__PURE__ */ a(
              "div",
              {
                className: `${s}-toolbar-item`,
                title: (Mt = l.toolbarTips) == null ? void 0 : Mt.catalog,
                onClick: () => {
                  w.emit(o, Me);
                },
                children: /* @__PURE__ */ a("svg", { className: `${s}-icon`, "aria-hidden": "true", children: /* @__PURE__ */ a("use", { xlinkHref: "#md-editor-icon-catalog" }) })
              },
              "bar-catalog"
            );
          case "preview":
            return /* @__PURE__ */ a(
              "div",
              {
                className: `${s}-toolbar-item`,
                title: (Lt = l.toolbarTips) == null ? void 0 : Lt.preview,
                onClick: () => {
                  n("preview");
                },
                children: /* @__PURE__ */ a("svg", { className: `${s}-icon`, "aria-hidden": "true", children: /* @__PURE__ */ a("use", { xlinkHref: "#md-editor-icon-preview" }) })
              },
              "bar-preview"
            );
          case "htmlPreview":
            return /* @__PURE__ */ a(
              "div",
              {
                className: `${s}-toolbar-item`,
                title: (It = l.toolbarTips) == null ? void 0 : It.htmlPreview,
                onClick: () => {
                  n("htmlPreview");
                },
                children: /* @__PURE__ */ a("svg", { className: `${s}-icon`, "aria-hidden": "true", children: /* @__PURE__ */ a("use", { xlinkHref: "#md-editor-icon-coding" }) })
              },
              "bar-htmlPreview"
            );
          case "github":
            return /* @__PURE__ */ a(
              "div",
              {
                className: `${s}-toolbar-item`,
                title: (Et = l.toolbarTips) == null ? void 0 : Et.github,
                onClick: () => Sr("https://github.com/imzbf/md-editor-rt"),
                children: /* @__PURE__ */ a("svg", { className: `${s}-icon`, "aria-hidden": "true", children: /* @__PURE__ */ a("use", { xlinkHref: "#md-editor-icon-github" }) })
              },
              "bar-github"
            );
          case "mermaid":
            return Y;
          case "katex":
            return se;
        }
      else
        return e.defToolbars && e.defToolbars[I] || "";
    },
    [
      e.defToolbars,
      e.noUploadImg,
      e.noPrettier,
      (ze = l.toolbarTips) == null ? void 0 : ze.bold,
      (We = l.toolbarTips) == null ? void 0 : We.underline,
      (Ze = l.toolbarTips) == null ? void 0 : Ze.italic,
      (Ye = l.toolbarTips) == null ? void 0 : Ye.strikeThrough,
      (Je = l.toolbarTips) == null ? void 0 : Je.sub,
      (Xe = l.toolbarTips) == null ? void 0 : Xe.sup,
      (Qe = l.toolbarTips) == null ? void 0 : Qe.quote,
      (et = l.toolbarTips) == null ? void 0 : et.unorderedList,
      (tt = l.toolbarTips) == null ? void 0 : tt.orderedList,
      (rt = l.toolbarTips) == null ? void 0 : rt.task,
      (nt = l.toolbarTips) == null ? void 0 : nt.codeRow,
      (lt = l.toolbarTips) == null ? void 0 : lt.code,
      (ot = l.toolbarTips) == null ? void 0 : ot.link,
      (it = l.toolbarTips) == null ? void 0 : it.image,
      (at = l.toolbarTips) == null ? void 0 : at.revoke,
      (ct = l.toolbarTips) == null ? void 0 : ct.next,
      (st = l.toolbarTips) == null ? void 0 : st.save,
      (dt = l.toolbarTips) == null ? void 0 : dt.prettier,
      (ut = l.toolbarTips) == null ? void 0 : ut.pageFullscreen,
      (mt = l.toolbarTips) == null ? void 0 : mt.fullscreen,
      (ht = l.toolbarTips) == null ? void 0 : ht.catalog,
      (gt = l.toolbarTips) == null ? void 0 : gt.preview,
      (ft = l.toolbarTips) == null ? void 0 : ft.htmlPreview,
      (bt = l.toolbarTips) == null ? void 0 : bt.github,
      c,
      G,
      C,
      $,
      M,
      Q,
      o,
      t.fullscreen,
      t.pageFullscreen,
      n,
      m,
      Y,
      se
    ]
  ), le = O(() => {
    const I = r.filter((_) => !i.includes(_)), R = I.indexOf("="), q = R === -1 ? I : I.slice(0, R + 1), Z = R === -1 ? [] : I.slice(R, Number.MAX_SAFE_INTEGER);
    return [
      q.map((_) => ne(_)),
      Z.map((_) => ne(_))
    ];
  }, [r, i, ne]);
  return /* @__PURE__ */ F($e, { children: [
    r.length > 0 && /* @__PURE__ */ a("div", { className: `${s}-toolbar-wrapper`, id: u, children: /* @__PURE__ */ F("div", { className: `${s}-toolbar`, children: [
      /* @__PURE__ */ a("div", { className: `${s}-toolbar-left`, children: le[0] }),
      /* @__PURE__ */ a("div", { className: `${s}-toolbar-right`, children: le[1] })
    ] }) }),
    /* @__PURE__ */ a(
      "input",
      {
        ref: h,
        accept: "image/*",
        type: "file",
        multiple: !0,
        style: { display: "none" }
      }
    ),
    /* @__PURE__ */ a(
      dn,
      {
        linkVisible: $.linkVisible,
        clipVisible: $.clipVisible,
        type: $.type,
        onCancel: k,
        onOk: b
      }
    )
  ] });
}, kn = Ne.memo(pn), vn = (e, r) => {
  const i = Hr(() => {
    e.removeEventListener("scroll", t), e.addEventListener("scroll", t), r.removeEventListener("scroll", t), r.addEventListener("scroll", t);
  }, 50), t = (n) => {
    const o = e.clientHeight, d = r.clientHeight, l = e.scrollHeight, u = r.scrollHeight, h = (l - o) / (u - d);
    n.target === e ? (r.removeEventListener("scroll", t), r.scrollTo({
      top: e.scrollTop / h
      // behavior: 'smooth'
    }), i()) : (e.removeEventListener("scroll", t), e.scrollTo({
      top: r.scrollTop * h
      // behavior: 'smooth'
    }), i());
  };
  return [
    () => {
      i().finally(() => {
        e.dispatchEvent(new Event("scroll"));
      });
    },
    () => {
      e.removeEventListener("scroll", t), r.removeEventListener("scroll", t);
    }
  ];
}, Cn = (e, r, i) => {
  const { view: t } = i, n = (m) => t.lineBlockAt(t.state.doc.line(m).from).top, o = (m) => t.lineBlockAt(t.state.doc.line(m).from).height;
  let d = [];
  const l = () => {
    d = [];
    const m = Array.from(r.querySelectorAll("[data-line]")).map(
      (b) => Number(b.dataset.line) + 1
    ), { lines: $ } = t.state.doc;
    let C = 1, k = m.shift() ?? $;
    for (let b = 1; b <= $; b++)
      b === k && (C = b, k = m.shift() || $ + 1), d.push({
        start: C,
        end: k - 1
      });
  };
  let u = 0, h = 0;
  const c = Mr((m) => {
    var k, b, f, p, v, y, H;
    if (!((k = r.firstElementChild) != null && k.firstElementChild))
      return;
    const $ = t.lineBlockAtHeight(t.scrollDOM.scrollTop), { number: C } = t.state.doc.lineAt($.from);
    if (!(C > d.length) && !(t.state.doc.lines < d[d.length - 1].end))
      if (m.target === e) {
        if (h !== 0)
          return;
        u++;
        const N = d[C - 1], x = n(N.end) + o(N.end);
        let L = 0;
        const E = n(N.start), P = r.querySelector(`[data-line="${N.start - 1}"]`) || ((b = r.firstElementChild) == null ? void 0 : b.firstElementChild), K = r.querySelector(`[data-line="${N.end}"]`) || ((f = r.lastElementChild) == null ? void 0 : f.lastElementChild);
        let G = 0, M = 0;
        E === 0 ? (L = (t.scrollDOM.scrollTop - E) / (x - E), G = K.offsetTop) : x > t.scrollDOM.scrollHeight - t.scrollDOM.clientHeight ? (L = (t.scrollDOM.scrollTop - E) / (t.scrollDOM.scrollHeight - t.scrollDOM.clientHeight - E), M = P.offsetTop, G = r.scrollHeight - r.clientHeight - M + 10) : (L = (t.scrollDOM.scrollTop - E) / (x - E), M = P.offsetTop, G = K.offsetTop - M);
        const Q = M - 10 + G * L;
        _t(r, Q, () => {
          u--;
        });
      } else {
        if (u !== 0)
          return;
        h++;
        const N = Array.from(
          r.querySelectorAll("[data-line]")
        ), x = r.scrollTop, L = r.scrollHeight;
        let E = N.length === 0 ? 1 : Math.ceil(
          Number(N[N.length - 1].dataset.line) * (x / L)
        ), P = (p = r.firstElementChild) == null ? void 0 : p.firstElementChild;
        for (let z = E; z >= 0; z--) {
          const W = r.querySelector(`[data-line="${z}"]`);
          if (W && W.offsetTop <= x) {
            P = W, E = z;
            break;
          }
        }
        let K = (v = r.firstElementChild) == null ? void 0 : v.firstElementChild, G = (y = r.firstElementChild) == null ? void 0 : y.lastElementChild;
        for (; N.length > 0; ) {
          const z = N.indexOf(P);
          if (z + 1 >= N.length)
            break;
          const W = N[z + 1];
          if (z === -1) {
            G = W;
            break;
          }
          const me = P.offsetTop;
          if (me > x) {
            if (z === 0) {
              K = P, G = W;
              break;
            }
            P = N[z - 1];
            continue;
          }
          const ke = W.offsetTop;
          if (me <= x && ke > x) {
            K = P, G = W;
            break;
          }
          P = W;
        }
        const M = K.offsetTop, Q = G.offsetTop;
        let Y = 0;
        const { start: se, end: ne } = d[Number(K.dataset.line || 0)], le = n(se);
        let ee = n(ne);
        const J = o(ne);
        let te = 0;
        K === ((H = r.firstElementChild) == null ? void 0 : H.firstElementChild) ? (Y = Math.max(x / Q, 0), te = ee + J - le) : ee > t.scrollDOM.scrollHeight - t.scrollDOM.clientHeight ? (Y = Math.max(
          (x - M) / (r.scrollHeight - M - r.clientHeight),
          0
        ), ee = n(t.state.doc.lines) + o(t.state.doc.lines), te = 8 + ee - le - e.clientHeight) : (Y = Math.max(
          (x - M) / (Q - M),
          0
        ), te = ee + J - le), _t(e, le + te * Y, () => {
          h--;
        });
      }
  }, 10);
  return [
    () => {
      l(), e.addEventListener("scroll", c), r.addEventListener("scroll", c), e.dispatchEvent(new Event("scroll"));
    },
    () => {
      d = [], e.removeEventListener("scroll", c), r.removeEventListener("scroll", c);
    }
  ];
}, $n = (e, r, i) => {
  const { editorId: t } = U(B), [n, o] = D({
    clear() {
    },
    init() {
    }
  });
  T(() => {
    n.clear();
    const d = document.querySelector(".cm-scroller"), l = document.querySelector(
      `[id="${t}-preview-wrapper"][data-show="true"]`
    ), u = document.querySelector(
      `[id="${t}-html-wrapper"][data-show="true"]`
    );
    if (l || u) {
      const h = l ? Cn : vn, c = l || u, [m, $] = h(d, c, i.current);
      o({
        init: m,
        clear: $
      });
    }
  }, [
    r,
    e.setting.fullscreen,
    e.setting.pageFullscreen,
    e.setting.preview,
    e.setting.htmlPreview
  ]), T(() => (e.scrollAuto ? n.init() : n.clear(), () => {
    n.clear();
  }), [n, e.scrollAuto]);
}, wn = $n, yn = (e, r, i) => {
  var c, m, $, C, k, b;
  let t = "", n = 0, o = 0, d = !0, l = !1;
  const u = r.getSelectedText(), h = (c = j.editorConfig) == null ? void 0 : c.mermaidTemplate;
  if (/^h[1-6]{1}$/.test(e)) {
    const f = e.replace(/^h(\d)/, (p, v) => new Array(Number(v)).fill("#", 0, v).join(""));
    t = `${f} ${u}`, n = f.length + 1;
  } else if (e === "prettier") {
    const f = window.prettier || (($ = (m = j.editorExtensions) == null ? void 0 : m.prettier) == null ? void 0 : $.prettierInstance), p = [
      ((C = window.prettierPlugins) == null ? void 0 : C.markdown) || ((b = (k = j.editorExtensions) == null ? void 0 : k.prettier) == null ? void 0 : b.parserMarkdownInstance)
    ];
    !f || p[0] === void 0 ? (w.emit(i.editorId, "errorCatcher", {
      name: "prettier",
      message: "prettier is undefined"
    }), t = r.getValue()) : t = f.format(r.getValue(), {
      parser: "markdown",
      plugins: p
    }), d = !1, l = !0;
  } else
    switch (e) {
      case "bold": {
        t = `**${u}**`, n = 2, o = -2;
        break;
      }
      case "underline": {
        t = `<u>${u}</u>`, n = 3, o = -4;
        break;
      }
      case "italic": {
        t = `*${u}*`, n = 1, o = -1;
        break;
      }
      case "strikeThrough": {
        t = `~~${u}~~`, n = 2, o = -2;
        break;
      }
      case "sub": {
        t = `<sub>${u}</sub>`, n = 5, o = -6;
        break;
      }
      case "sup": {
        t = `<sup>${u}</sup>`, n = 5, o = -6;
        break;
      }
      case "codeRow": {
        t = "`" + u + "`", n = 1, o = -1;
        break;
      }
      case "quote": {
        t = `> ${u}`, n = 2;
        break;
      }
      case "orderedList": {
        t = `1. ${u}`, n = 3;
        break;
      }
      case "unorderedList": {
        t = `- ${u}`, n = 2;
        break;
      }
      case "task": {
        t = `- [ ] ${u}`, n = 6;
        break;
      }
      case "code": {
        const f = i.text || u || "", p = i.mode || "language";
        t = `\`\`\`${p}
${f}
\`\`\`
`, n = 3, o = 3 + p.length - t.length;
        break;
      }
      case "table": {
        t = "|";
        const { selectedShape: f = { x: 1, y: 1 } } = i, { x: p, y: v } = f;
        for (let y = 0; y <= v; y++)
          t += " col |";
        t += `
|`;
        for (let y = 0; y <= v; y++)
          t += " - |";
        for (let y = 0; y <= p; y++) {
          t += `
|`;
          for (let H = 0; H <= v; H++)
            t += " content |";
        }
        n = 2, o = 5 - t.length;
        break;
      }
      case "link": {
        const { desc: f, url: p } = i;
        t = `[${f}](${p})`, d = !1;
        break;
      }
      case "image": {
        const { desc: f, url: p, urls: v } = i;
        v instanceof Array ? t = v.reduce((y, H) => y + `![${f}](${H})
`, "") : t = `![${f}](${p})
`, d = !1;
        break;
      }
      case "flow": {
        t = `\`\`\`mermaid
${(h == null ? void 0 : h.flow) || `flowchart TD 
  Start --> Stop`}
\`\`\`
`, n = 3, o = 10 - t.length;
        break;
      }
      case "sequence": {
        t = `\`\`\`mermaid
${(h == null ? void 0 : h.sequence) || `sequenceDiagram
  A->>B: hello!
  B-->>A: hi!
  A-)B: bye!`}
\`\`\`
`, n = 3, o = 10 - t.length;
        break;
      }
      case "gantt": {
        t = `\`\`\`mermaid
${(h == null ? void 0 : h.gantt) || `gantt
title A Gantt Diagram
dateFormat  YYYY-MM-DD
section Section
A task  :a1, 2014-01-01, 30d
Another task  :after a1, 20d`}
\`\`\`
`, n = 3, o = 10 - t.length;
        break;
      }
      case "class": {
        t = `\`\`\`mermaid
${(h == null ? void 0 : h.class) || `classDiagram
  class Animal
  Vehicle <|-- Car`}
\`\`\`
`, n = 3, o = 10 - t.length;
        break;
      }
      case "state": {
        t = `\`\`\`mermaid
${(h == null ? void 0 : h.state) || `stateDiagram-v2
  s1 --> s2`}
\`\`\`
`, n = 3, o = 10 - t.length;
        break;
      }
      case "pie": {
        t = `\`\`\`mermaid
${(h == null ? void 0 : h.pie) || `pie title Pets adopted by volunteers
  "Dogs" : 386
  "Cats" : 85
  "Rats" : 15`}
\`\`\`
`, n = 3, o = 10 - t.length;
        break;
      }
      case "relationship": {
        t = `\`\`\`mermaid
${(h == null ? void 0 : h.relationship) || `erDiagram
  CAR ||--o{ NAMED-DRIVER : allows
  PERSON ||--o{ NAMED-DRIVER : is`}
\`\`\`
`, n = 3, o = 10 - t.length;
        break;
      }
      case "journey": {
        t = `\`\`\`mermaid
${(h == null ? void 0 : h.journey) || `journey
  title My working day
  section Go to work
    Make tea: 5: Me
    Go upstairs: 3: Me
    Do work: 1: Me, Cat
  section Go home
    Go downstairs: 5: Me
    Sit down: 5: Me`}
\`\`\`
`, n = 3, o = 10 - t.length;
        break;
      }
      case "katexInline": {
        t = "$$", n = 1, o = -1;
        break;
      }
      case "katexBlock": {
        t = `$$

$$
`, n = 3, o = -4;
        break;
      }
      case "universal": {
        const { generate: f } = i, p = f(u);
        t = p.targetValue, d = p.select, n = p.deviationStart, o = p.deviationEnd;
      }
    }
  return {
    text: t,
    options: {
      // 是否选中
      select: d,
      // 选中时，开始位置的偏移量
      deviationStart: n,
      // 结束的偏移量
      deviationEnd: o,
      // 是否整个替换
      replaceAll: l
    }
  };
}, de = (e) => {
  const r = new Kr();
  return (t) => (r.get(e.state) ? e.dispatch({ effects: r.reconfigure(t) }) : e.dispatch({
    effects: Gr.appendConfig.of(r.of(t))
  }), !0);
};
class Tn {
  constructor(r) {
    ce(this, "view");
    // 切换tabSize的执行方法。切换时，Compartment实例需要相同
    ce(this, "toggleTabSize");
    ce(this, "togglePlaceholder");
    /**
     * 设置全部的扩展
     */
    ce(this, "setExtensions");
    ce(this, "toggleDisabled");
    ce(this, "toggleReadOnly");
    ce(this, "toggleMaxlength");
    this.view = r, this.toggleTabSize = de(this.view), this.togglePlaceholder = de(this.view), this.setExtensions = de(this.view), this.toggleDisabled = de(this.view), this.toggleReadOnly = de(this.view), this.toggleMaxlength = de(this.view);
  }
  getValue() {
    return this.view.state.doc.toString();
  }
  /**
   * 设置内容
   *
   * @param insert 待插入内容
   * @param from 插入开始位置
   * @param to 插入结束位置
   */
  setValue(r, i = 0, t = this.view.state.doc.length) {
    this.view.dispatch({
      changes: {
        from: i,
        to: t,
        insert: r
      }
    });
  }
  /**
   * 获取选中的文本
   */
  getSelectedText() {
    const { from: r, to: i } = this.view.state.selection.main;
    return this.view.state.sliceDoc(r, i);
  }
  /**
   * 使用新的内容替换选中的内容
   *
   * @param text 待替换内容
   * @param options 替换后是否选中
   */
  replaceSelectedText(r, i = {
    // 是否选中
    select: !0,
    // 选中时，开始位置的偏移量
    deviationStart: 0,
    // 结束的偏移量
    deviationEnd: 0,
    // 直接替换所有文本
    replaceAll: !1
  }) {
    if (i.replaceAll) {
      this.setValue(r);
      return;
    }
    const { from: t } = this.view.state.selection.main;
    if (this.view.dispatch(this.view.state.replaceSelection(r)), i.select) {
      const n = t + r.length + i.deviationEnd;
      this.view.dispatch({
        selection: oe.create(
          [
            oe.range(t + i.deviationStart, n),
            oe.cursor(n)
          ],
          1
        )
      });
    }
    this.view.focus();
  }
  /**
   * 设置tabSize
   *
   * @param tabSize 需要切换的大小
   */
  setTabSize(r) {
    this.toggleTabSize([
      we.tabSize.of(r),
      zr.of(" ".repeat(r))
    ]);
  }
  /**
   * 设置placeholder
   *
   * @param t 目标内容
   */
  setPlaceholder(r) {
    this.togglePlaceholder(Fr(r));
  }
  focus(r) {
    if (this.view.focus(), !r)
      return;
    let i = 0, t = 0, n = 0;
    switch (r) {
      case "start":
        break;
      case "end": {
        i = t = n = this.getValue().length;
        break;
      }
      default:
        i = r.rangeAnchor || r.cursorPos, t = r.rangeHead || r.cursorPos, n = r.cursorPos;
    }
    this.view.dispatch({
      scrollIntoView: !0,
      selection: oe.create(
        [oe.range(i, t), oe.cursor(n)],
        1
      )
    });
  }
  setDisabled(r) {
    this.toggleDisabled([He.editable.of(!r)]);
  }
  setReadOnly(r) {
    this.toggleReadOnly([we.readOnly.of(r)]);
  }
  setMaxLength(r) {
    this.toggleMaxlength([
      we.changeFilter.of((i) => i.newDoc.length <= r)
    ]);
  }
}
const xn = "#e5c07b", Gt = "var(--md-color)", Nn = "#56b6c2", Sn = "#ffffff", fe = "var(--md-color)", zt = "#e5c07b", Hn = "#e5c07b", Mn = "var(--md-color)", Wt = "#d19a66", Ln = "#c678dd", In = "#21252b", En = "#2c313a", Zt = "var(--md-bk-color)", ye = "var(--md-bk-color)", An = "#ceedfa33", Yt = "#528bff", Dn = He.theme(
  {
    "&": {
      color: fe,
      backgroundColor: Zt
    },
    ".cm-content": {
      caretColor: Yt
    },
    ".cm-cursor, .cm-dropCursor": { borderLeftColor: Yt },
    "&.cm-focused > .cm-scroller > .cm-selectionLayer .cm-selectionBackground, .cm-selectionBackground, .cm-content ::selection": { backgroundColor: An },
    ".cm-panels": { backgroundColor: In, color: fe },
    ".cm-panels.cm-panels-top": { borderBottom: "2px solid black" },
    ".cm-panels.cm-panels-bottom": { borderTop: "2px solid black" },
    ".cm-searchMatch": {
      backgroundColor: "#72a1ff59",
      outline: "1px solid #457dff"
    },
    ".cm-searchMatch.cm-searchMatch-selected": {
      backgroundColor: "#6199ff2f"
    },
    ".cm-activeLine": { backgroundColor: "#ceedfa33" },
    ".cm-selectionMatch": { backgroundColor: "#aafe661a" },
    "&.cm-focused .cm-matchingBracket, &.cm-focused .cm-nonmatchingBracket": {
      backgroundColor: "#bad0f847"
    },
    ".cm-gutters": {
      backgroundColor: Zt,
      color: fe,
      borderRight: "1px solid",
      borderColor: "var(--md-border-color)"
    },
    ".cm-activeLineGutter": {
      backgroundColor: En
    },
    ".cm-foldPlaceholder": {
      backgroundColor: "transparent",
      border: "none",
      color: "#ddd"
    },
    ".cm-tooltip": {
      border: "1px solid var(--md-border-color)",
      backgroundColor: ye
    },
    ".cm-tooltip .cm-tooltip-arrow:before": {
      borderTopColor: "transparent",
      borderBottomColor: "transparent"
    },
    ".cm-tooltip .cm-tooltip-arrow:after": {
      borderTopColor: ye,
      borderBottomColor: ye
    },
    ".cm-tooltip-autocomplete": {
      "& > ul > li[aria-selected]": {
        color: fe
      }
    }
  },
  { dark: !0 }
), Pn = ir.define([
  { tag: g.keyword, color: Ln },
  { tag: [g.name, g.deleted, g.character, g.propertyName, g.macroName], color: Gt },
  { tag: [g.function(g.variableName), g.labelName], color: Hn },
  { tag: [g.color, g.constant(g.name), g.standard(g.name)], color: Wt },
  { tag: [g.definition(g.name), g.separator], color: fe },
  {
    tag: [
      g.typeName,
      g.className,
      g.number,
      g.changed,
      g.annotation,
      g.modifier,
      g.self,
      g.namespace
    ],
    color: xn
  },
  {
    tag: [
      g.operator,
      g.operatorKeyword,
      g.url,
      g.escape,
      g.regexp,
      g.link,
      g.special(g.string)
    ],
    color: Nn
  },
  { tag: [g.meta, g.comment], color: zt },
  { tag: g.strong, fontWeight: "bold" },
  { tag: g.emphasis, fontStyle: "italic" },
  { tag: g.strikethrough, textDecoration: "line-through" },
  { tag: g.link, color: zt, textDecoration: "underline" },
  { tag: g.heading, fontWeight: "bold", color: Gt },
  { tag: [g.atom, g.bool, g.special(g.variableName)], color: Wt },
  { tag: [g.processingInstruction, g.string, g.inserted], color: Mn },
  { tag: g.invalid, color: Sn }
]), Rn = [
  Dn,
  ar(Pn)
], Fn = "#e5c07b", Jt = "#3f4a54", _n = "#56b6c2", On = "#fff", be = "#3f4a54", Xt = "#2d8cf0", Vn = "#2d8cf0", Bn = "#3f4a54", Qt = "#d19a66", jn = "#c678dd", Un = "#21252b", qn = "#ceedfa33", er = "var(--md-bk-color)", Te = "var(--md-bk-color)", Kn = "#bad5fa", tr = "#3f4a54", Gn = He.theme(
  {
    "&": {
      color: be,
      backgroundColor: er
    },
    ".cm-content": {
      caretColor: tr
    },
    ".cm-cursor, .cm-dropCursor": { borderLeftColor: tr },
    "&.cm-focused > .cm-scroller > .cm-selectionLayer .cm-selectionBackground, .cm-selectionBackground, .cm-content ::selection": { backgroundColor: Kn },
    ".cm-panels": { backgroundColor: Un, color: be },
    ".cm-panels.cm-panels-top": { borderBottom: "2px solid black" },
    ".cm-panels.cm-panels-bottom": { borderTop: "2px solid black" },
    ".cm-searchMatch": {
      backgroundColor: "#72a1ff59",
      outline: "1px solid #457dff"
    },
    ".cm-searchMatch.cm-searchMatch-selected": {
      backgroundColor: "#6199ff2f"
    },
    ".cm-activeLine": { backgroundColor: "#ceedfa33" },
    ".cm-selectionMatch": { backgroundColor: "#aafe661a" },
    "&.cm-focused .cm-matchingBracket, &.cm-focused .cm-nonmatchingBracket": {
      backgroundColor: "#bad0f847"
    },
    ".cm-gutters": {
      backgroundColor: er,
      color: be,
      borderRight: "1px solid",
      borderColor: "var(--md-border-color)"
    },
    ".cm-activeLineGutter": {
      backgroundColor: qn
    },
    ".cm-foldPlaceholder": {
      backgroundColor: "transparent",
      border: "none",
      color: "#ddd"
    },
    ".cm-tooltip": {
      border: "1px solid var(--md-border-color)",
      backgroundColor: Te
    },
    ".cm-tooltip .cm-tooltip-arrow:before": {
      borderTopColor: "transparent",
      borderBottomColor: "transparent"
    },
    ".cm-tooltip .cm-tooltip-arrow:after": {
      borderTopColor: Te,
      borderBottomColor: Te
    },
    ".cm-tooltip-autocomplete": {
      "& > ul > li[aria-selected]": {
        color: be
      }
    }
  }
  // { dark: true }
), zn = ir.define([
  { tag: g.keyword, color: jn },
  { tag: [g.name, g.deleted, g.character, g.propertyName, g.macroName], color: Jt },
  { tag: [g.function(g.variableName), g.labelName], color: Vn },
  { tag: [g.color, g.constant(g.name), g.standard(g.name)], color: Qt },
  { tag: [g.definition(g.name), g.separator], color: be },
  {
    tag: [
      g.typeName,
      g.className,
      g.number,
      g.changed,
      g.annotation,
      g.modifier,
      g.self,
      g.namespace
    ],
    color: Fn
  },
  {
    tag: [
      g.operator,
      g.operatorKeyword,
      g.url,
      g.escape,
      g.regexp,
      g.link,
      g.special(g.string)
    ],
    color: _n
  },
  { tag: [g.meta, g.comment], color: Xt },
  { tag: g.strong, fontWeight: "bold" },
  { tag: g.emphasis, fontStyle: "italic" },
  { tag: g.strikethrough, textDecoration: "line-through" },
  { tag: g.link, color: Xt, textDecoration: "underline" },
  { tag: g.heading, fontWeight: "bold", color: Jt },
  { tag: [g.atom, g.bool, g.special(g.variableName)], color: Qt },
  { tag: [g.processingInstruction, g.string, g.inserted], color: Bn },
  { tag: g.invalid, color: On }
]), Wn = [
  Gn,
  ar(zn)
], Ce = (e, r, i, t, n) => (o, d, l, u) => {
  const h = `${e}${r}`.slice(u - l);
  o.dispatch(o.state.replaceSelection(`${h}${i}${t}`));
  const c = l + d.label.length + (n === "title" ? i.length : 0);
  o.dispatch({
    selection: oe.create(
      [
        oe.range(
          l + d.label.length + (n === "title" ? 1 : -r.length),
          c
        ),
        oe.cursor(c)
      ],
      1
    )
  }), o.focus();
}, rr = (e) => (r, i, t, n) => {
  const o = e.slice(n - t);
  r.dispatch(r.state.replaceSelection(`${o} `));
}, Zn = (e) => {
  const r = (i) => {
    const t = i.matchBefore(
      /^#+|^-\s*\[*\s*\]*|`+|\[|!\[*|^\|\s?\|?|^\$\$?|!+\s*\w*/
    );
    return t === null || t.from == t.to && i.explicit ? null : {
      from: t.from,
      options: [
        // 标题
        ...["h1", "h2", "h3", "h4", "h5", "h6"].map((n, o) => {
          const d = new Array(o + 1).fill("#").join("");
          return {
            label: d,
            type: "text",
            apply: rr(d)
          };
        }),
        // 任务列表
        ...["unchecked", "checked"].map((n) => {
          const o = n === "checked" ? "- [x]" : "- [ ]";
          return {
            label: o,
            type: "text",
            apply: rr(o)
          };
        }),
        // 代码
        ...[
          ["`", ""],
          ["```", "language"],
          ["```mermaid\n", ""]
        ].map((n) => ({
          label: `${n[0]}${n[1]}`,
          type: "text",
          apply: Ce(n[0], n[1], "", n[0] === "`" ? "`" : "\n```", "type")
        })),
        // 链接
        {
          label: "[]()",
          type: "text"
        },
        {
          label: "![]()",
          type: "text"
        },
        // 表格
        {
          label: "| |",
          type: "text",
          detail: "table",
          apply: `| col | col | col |
| - | - | - |
| content | content | content |
| content | content | content |`
        },
        // 公式
        {
          label: "$",
          type: "text",
          apply: Ce("$", "", "", "$", "type")
        },
        {
          label: "$$",
          type: "text",
          apply: Ce("$$", "", `
`, `
$$`, "title")
        },
        // 那啥？
        ...[
          "note",
          "abstract",
          "info",
          "tip",
          "success",
          "question",
          "warning",
          "failure",
          "danger",
          "bug",
          "example",
          "quote",
          "hint",
          "caution",
          "error",
          "attention"
        ].map((n) => ({
          label: `!!! ${n}`,
          type: "text",
          apply: Ce("!!!", ` ${n}`, " Title", `

!!!`, "title")
        }))
      ]
    };
  };
  return Wr({
    override: e ? [r, ...e] : [r]
  });
}, Yn = Zn, Jn = (e, r) => [
  {
    key: "Ctrl-b",
    mac: "Cmd-b",
    run: () => (w.emit(e, "replace", "bold"), !0)
  },
  {
    key: "Ctrl-d",
    mac: "Cmd-d",
    run: Br,
    preventDefault: !0
  },
  {
    key: "Ctrl-s",
    mac: "Cmd-s",
    run: (H) => (w.emit(e, pe, H.state.doc.toString()), !0),
    shift: () => (w.emit(e, "replace", "strikeThrough"), !0)
  },
  {
    key: "Ctrl-u",
    mac: "Cmd-u",
    run: () => (w.emit(e, "replace", "underline"), !0),
    shift: () => (w.emit(e, "replace", "unorderedList"), !0)
  },
  {
    key: "Ctrl-i",
    mac: "Cmd-i",
    run: () => (w.emit(e, "replace", "italic"), !0),
    shift: () => (w.emit(e, "openModals", "image"), !0)
  },
  {
    key: "Ctrl-1",
    mac: "Cmd-1",
    run: () => (w.emit(e, "replace", "h1"), !0)
  },
  {
    key: "Ctrl-2",
    mac: "Cmd-2",
    run: () => (w.emit(e, "replace", "h2"), !0)
  },
  {
    key: "Ctrl-3",
    mac: "Cmd-3",
    run: () => (w.emit(e, "replace", "h3"), !0)
  },
  {
    key: "Ctrl-4",
    mac: "Cmd-4",
    run: () => (w.emit(e, "replace", "h4"), !0)
  },
  {
    key: "Ctrl-5",
    mac: "Cmd-5",
    run: () => (w.emit(e, "replace", "h5"), !0)
  },
  {
    key: "Ctrl-6",
    mac: "Cmd-6",
    run: () => (w.emit(e, "replace", "h6"), !0)
  },
  {
    key: "Ctrl-ArrowUp",
    mac: "Cmd-ArrowUp",
    run: () => (w.emit(e, "replace", "sup"), !0)
  },
  {
    key: "Ctrl-ArrowDown",
    mac: "Cmd-ArrowDown",
    run: () => (w.emit(e, "replace", "sub"), !0)
  },
  {
    key: "Ctrl-o",
    mac: "Cmd-o",
    run: () => (w.emit(e, "replace", "orderedList"), !0)
  },
  {
    key: "Ctrl-c",
    mac: "Cmd-c",
    shift: () => (w.emit(e, "replace", "code"), !0),
    any(H, N) {
      return (N.ctrlKey || N.metaKey) && N.altKey && N.code === "KeyC" ? (w.emit(e, "replace", "codeRow"), !0) : !1;
    }
  },
  {
    key: "Ctrl-l",
    mac: "Cmd-l",
    run: () => (w.emit(e, "openModals", "link"), !0)
  },
  {
    key: "Ctrl-f",
    mac: "Cmd-f",
    shift: () => r.noPrettier ? !1 : (w.emit(e, "replace", "prettier"), !0)
  },
  {
    any: (H, N) => (N.ctrlKey || N.metaKey) && N.altKey && N.shiftKey && N.code === "KeyT" ? (w.emit(e, "replace", "table"), !0) : !1
  }
], Xn = Jn, Qn = (e) => {
  const { editorId: r } = U(B);
  return (t) => {
    if (t.clipboardData) {
      if (t.clipboardData.files.length > 0) {
        const { files: n } = t.clipboardData;
        w.emit(
          r,
          "uploadImage",
          Array.from(n).filter((o) => /image\/.*/.test(o.type))
        ), t.preventDefault();
      }
      if (e.autoDetectCode && t.clipboardData.types.includes("vscode-editor-data")) {
        const n = JSON.parse(t.clipboardData.getData("vscode-editor-data"));
        w.emit(r, "replace", "code", {
          mode: n.mode,
          text: t.clipboardData.getData("text/plain")
        }), t.preventDefault();
      }
    }
  };
}, el = Qn, tl = (e) => {
  const { editorId: r } = U(B);
  w.on(r, {
    name: sr,
    callback(i) {
      var t;
      (t = e.current) == null || t.focus(i);
    }
  });
}, rl = tl, nl = (e) => {
  const { tabWidth: r, editorId: i, theme: t } = U(B), n = V(null), o = V(), [d] = D(() => Xn(i, e)), l = V(!0), u = el(e), [h] = D(() => [
    _r.of([...d, jr]),
    Rr,
    Vr({ codeLanguages: Or }),
    // 横向换行
    ve.lineWrapping,
    ve.updateListener.of((m) => {
      m.docChanged && e.onChange(m.state.doc.toString());
    }),
    ve.domEventHandlers({
      paste: u,
      blur: e.onBlur,
      focus: e.onFocus
    })
  ]), c = O(() => j.codeMirrorExtensions(
    t,
    [
      ...h,
      t === "light" ? Wn : Rn,
      Yn(e.completions)
    ],
    [...d]
  ), [e.completions, t]);
  return T(() => {
    const m = new ve({
      doc: e.value,
      parent: n.current
    }), $ = new Tn(m);
    return o.current = $, setTimeout(() => {
      $.setTabSize(r), $.setDisabled(e.disabled), $.setReadOnly(e.readOnly), $.setExtensions(c), e.placeholder && $.setPlaceholder(e.placeholder), typeof e.maxLength == "number" && $.setMaxLength(e.maxLength), e.autoFocus && m.focus(), l.current = !1;
    }, 0), w.on(i, {
      name: "ctrlZ",
      callback() {
        Ur(m);
      }
    }), w.on(i, {
      name: "ctrlShiftZ",
      callback() {
        qr(m);
      }
    }), w.on(i, {
      name: "replace",
      callback(C, k = {}) {
        var p;
        const { text: b, options: f } = yn(C, o.current, k);
        (p = o.current) == null || p.replaceSelectedText(b, f);
      }
    }), () => {
      m.destroy(), l.current = !0;
    };
  }, []), T(() => {
    var m;
    l.current || (m = o.current) == null || m.setExtensions(c);
  }, [c]), T(() => {
    var m, $;
    ((m = o.current) == null ? void 0 : m.getValue()) !== e.value && (($ = o.current) == null || $.setValue(e.value));
  }, [e.value]), T(() => {
    var m;
    l.current || (m = o.current) == null || m.setTabSize(r);
  }, [r]), T(() => {
    var m;
    l.current || (m = o.current) == null || m.setPlaceholder(e.placeholder);
  }, [e.placeholder]), T(() => {
    var m;
    l.current || (m = o.current) == null || m.setDisabled(e.disabled);
  }, [e.disabled]), T(() => {
    var m;
    l.current || (m = o.current) == null || m.setDisabled(e.readOnly);
  }, [e.readOnly]), T(() => {
    var m;
    l.current || typeof e.maxLength == "number" && ((m = o.current) == null || m.setMaxLength(e.maxLength));
  }, [e.maxLength]), rl(o), {
    inputWrapperRef: n,
    codeMirrorUt: o
  };
}, ll = nl, ol = (e, r) => {
  const { editorId: i } = U(B);
  T(() => (() => {
    const n = document.querySelectorAll(`#${i}-preview img`), o = Lr(n, {
      background: "#00000073"
    });
    return () => {
      o.detach();
    };
  })(), [r, e.setting]);
}, il = ol, al = (e, r) => {
  var o, d, l;
  const { editorId: i, usedLanguageText: t } = U(B), { formatCopiedText: n = (u) => u } = e;
  T(() => {
    e.setting.preview && document.querySelectorAll(`#${i} .${s}-preview pre`).forEach((u) => {
      var $, C;
      let h = -1;
      ($ = u.querySelector(".copy-button")) == null || $.remove();
      const c = ((C = t.copyCode) == null ? void 0 : C.text) || "复制代码", m = document.createElement("span");
      m.setAttribute("class", "copy-button"), m.dataset.tips = c, m.innerHTML = `<svg class="${s}-icon" aria-hidden="true"><use xlink:href="#${s}-icon-copy"></use></svg>`, m.addEventListener("click", () => {
        var v, y;
        clearTimeout(h);
        const k = u.querySelector("code").innerText, b = Ir(n(k)), f = ((v = t.copyCode) == null ? void 0 : v.successTips) || "已复制！", p = ((y = t.copyCode) == null ? void 0 : y.failTips) || "已复制！";
        m.dataset.tips = b ? f : p, h = window.setTimeout(() => {
          m.dataset.tips = c;
        }, 1500);
      }), u.appendChild(m);
    });
  }, [
    n,
    r,
    e.setting.preview,
    (o = t.copyCode) == null ? void 0 : o.failTips,
    (d = t.copyCode) == null ? void 0 : d.successTips,
    (l = t.copyCode) == null ? void 0 : l.text
  ]);
}, cl = al, sl = (e) => {
  var l;
  const r = (l = j.editorExtensions) == null ? void 0 : l.highlight, i = r == null ? void 0 : r.instance, { highlight: t } = U(B), n = V(i), [o, d] = D(!!i);
  return T(() => {
    Nr(`${s}-hlCss`, "href", t.css);
  }, [t.css]), T(() => {
    if (!e.noHighlight && !n.current) {
      const u = document.createElement("script");
      u.src = t.js, u.onload = () => {
        n.current = window.hljs, d(!0);
      }, u.id = `${s}-hljs`, X(u, "hljs");
      const h = document.createElement("link");
      h.rel = "stylesheet", h.href = t.css, h.id = `${s}-hlCss`, X(h);
    }
  }, []), { hljsRef: n, hljsInited: o };
}, dl = sl, ul = (e) => {
  const { theme: r } = U(B), { editorExtensions: i } = j, t = i == null ? void 0 : i.mermaid, n = V(t == null ? void 0 : t.instance), [o, d] = D(!1), [l] = D(
    () => new Pr({
      max: 1e3,
      // 缓存10分钟
      ttl: 6e5
    })
  ), u = A(() => {
    l.clear();
    const c = n.current;
    !e.noMermaid && c && (c.initialize({
      startOnLoad: !1,
      theme: r === "dark" ? "dark" : "default"
    }), d((m) => !m));
  }, [r]);
  return T(u, [u]), T(() => {
    if (!e.noMermaid && !(t != null && t.instance)) {
      const c = (t == null ? void 0 : t.js) || Tr;
      if (/\.mjs/.test(c))
        import(
          /* @vite-ignore */
          /* webpackIgnore: true */
          c
        ).then((m) => {
          n.current = m.default, u();
        });
      else {
        const m = document.createElement("script");
        m.id = `${s}-mermaid`, m.src = c, m.onload = () => {
          n.current = window.mermaid, u();
        }, X(m, "mermaid");
      }
    }
  }, []), { mermaidRef: n, reRender: o, replaceMermaid: () => {
    if (!e.noMermaid && n.current) {
      const c = document.querySelectorAll(
        `div.${s}-mermaid`
      ), m = document.createElement("div");
      m.style.width = document.body.offsetWidth + "px", m.style.height = document.body.offsetHeight + "px", m.style.position = "fixed", m.style.zIndex = "-10000", m.style.top = "-10000", document.body.appendChild(m);
      let $ = c.length;
      c.forEach(async (C) => {
        let k = l.get(C.innerText);
        if (!k) {
          const f = kr(), p = n.current.renderAsync || n.current.render;
          let v = "";
          try {
            v = await p(f, C.innerText, m);
          } catch {
          }
          k = typeof v == "string" ? v : v.svg, l.set(C.innerText, k);
        }
        const b = document.createElement("p");
        b.className = `${s}-mermaid`, b.setAttribute("data-processed", ""), b.innerHTML = k, C.dataset.line !== void 0 && (b.dataset.line = C.dataset.line), C.replaceWith(b), --$ === 0 && m.remove();
      });
    }
  } };
}, ml = ul, hl = (e) => {
  var d;
  const r = (d = j.editorExtensions) == null ? void 0 : d.katex, i = r == null ? void 0 : r.instance, t = V(i), [n, o] = D(!!i);
  return T(() => {
    if (!e.noKatex && !t.current) {
      const l = document.createElement("script");
      l.src = (r == null ? void 0 : r.js) || Ft.js, l.onload = () => {
        t.current = window.katex, o(!0);
      }, l.id = `${s}-katex`;
      const u = document.createElement("link");
      u.rel = "stylesheet", u.href = (r == null ? void 0 : r.css) || Ft.css, u.id = `${s}-katexCss`, X(l, "katex"), X(u);
    }
  }), { katexRef: t, katexInited: n };
}, gl = hl, fl = (e, r) => {
  const i = e.renderer.rules.fence.bind(e.renderer.rules);
  e.renderer.rules.fence = (t, n, o, d, l) => {
    const u = t[n], h = u.content.trim();
    if (u.info === "mermaid" && !r.noMermaid) {
      let c;
      return t[n].map && t[n].level === 0 && (c = t[n].map[0], t[n].attrSet("data-line", String(c))), `<div class="${s}-mermaid" ${c !== void 0 ? "data-line=" + c : ""} data-mermaid-theme=${r.themeRef.current}>${h}</div>`;
    }
    return i(t, n, o, d, l);
  };
}, bl = fl, nr = (e, r) => {
  let i = !0, t = !0;
  const n = e.posMax, o = r > 0 ? e.src.charCodeAt(r - 1) : -1, d = r + 1 <= n ? e.src.charCodeAt(r + 1) : -1;
  return (o === 32 || o === 9 || d >= 48 && d <= 57) && (t = !1), (d === 32 || d === 9) && (i = !1), {
    can_open: i,
    can_close: t
  };
}, pl = (e, r) => {
  let i, t, n, o;
  if (e.src[e.pos] !== "$")
    return !1;
  if (n = nr(e, e.pos), !n.can_open)
    return r || (e.pending += "$"), e.pos += 1, !0;
  const d = e.pos + 1;
  for (i = d; (i = e.src.indexOf("$", i)) !== -1; ) {
    for (o = i - 1; e.src[o] === "\\"; )
      o -= 1;
    if ((i - o) % 2 == 1)
      break;
    i += 1;
  }
  return i === -1 ? (r || (e.pending += "$"), e.pos = d, !0) : i - d === 0 ? (r || (e.pending += "$$"), e.pos = d + 1, !0) : (n = nr(e, i), n.can_close ? (r || (t = e.push("math_inline", "math", 0), t.markup = "$", t.content = e.src.slice(d, i)), e.pos = i + 1, !0) : (r || (e.pending += "$"), e.pos = d, !0));
}, kl = (e, r, i, t) => {
  let n, o, d, l, u = !1, h = e.bMarks[r] + e.tShift[r], c = e.eMarks[r];
  if (h + 2 > c || e.src.slice(h, h + 2) !== "$$")
    return !1;
  if (h += 2, n = e.src.slice(h, c), t)
    return !0;
  for (n.trim().slice(-2) === "$$" && (n = n.trim().slice(0, -2), u = !0), d = r; !u && (d++, !(d >= i || (h = e.bMarks[d] + e.tShift[d], c = e.eMarks[d], h < c && e.tShift[d] < e.blkIndent))); )
    e.src.slice(h, c).trim().slice(-2) === "$$" && (l = e.src.slice(0, c).lastIndexOf("$$"), o = e.src.slice(h, l), u = !0);
  e.line = d + 1;
  const m = e.push("math_block", "math", 0);
  return m.block = !0, m.content = (n && n.trim() ? n + `
` : "") + e.getLines(r + 1, d, e.tShift[r], !0) + (o && o.trim() ? o : ""), m.map = [r, e.line], m.markup = "$$", !0;
}, vl = (e, r) => {
  const i = (n) => {
    if (r.katexRef.current) {
      const o = r.katexRef.current.renderToString(n, {
        throwOnError: !1
      });
      return `<span class="${s}-katex-inline" data-processed>${o}</span>`;
    } else
      return `<span class="${s}-katex-inline">${n}</span>`;
  }, t = (n, o) => {
    if (r.katexRef.current) {
      const d = r.katexRef.current.renderToString(n, {
        throwOnError: !1,
        displayMode: !0
      });
      return `<p class="${s}-katex-block" data-line=${o} data-processed>${d}</p>`;
    } else
      return `<p class="${s}-katex-block" data-line=${o}>${n}</p>`;
  };
  e.inline.ruler.after("escape", "math_inline", pl), e.block.ruler.after("blockquote", "math_block", kl, {
    alt: ["paragraph", "reference", "blockquote", "list"]
  }), e.renderer.rules.math_inline = (n, o) => i(n[o].content), e.renderer.rules.math_block = (n, o) => t(n[o].content, n[o].map[0]) + `
`;
}, Cl = vl, $l = (e, r) => {
  r = r || {};
  const i = 3, t = r.marker || "!", n = t.charCodeAt(0), o = t.length;
  let d = "", l = "";
  const u = (c, m, $, C, k) => {
    const b = c[m];
    return b.type === "admonition_open" ? (c[m].attrPush([
      "class",
      `${s}-admonition ${s}-admonition-${b.info}`
    ]), c[m].attrSet("data-line", String(c[m].map[0]))) : b.type === "admonition_title_open" && c[m].attrPush(["class", `${s}-admonition-title`]), k.renderToken(c, m, $);
  }, h = (c) => {
    const m = c.trim().split(" ", 2);
    l = "", d = m[0], m.length > 1 && (l = c.substring(d.length + 2)), (l === "" || !l) && (l = d);
  };
  e.block.ruler.before(
    "code",
    "admonition",
    (c, m, $, C) => {
      let k, b, f, p = !1, v = c.bMarks[m] + c.tShift[m], y = c.eMarks[m];
      if (n !== c.src.charCodeAt(v))
        return !1;
      for (k = v + 1; k <= y && t[(k - v) % o] === c.src[k]; k++)
        ;
      const H = Math.floor((k - v) / o);
      if (H !== i)
        return !1;
      k -= (k - v) % o;
      const N = c.src.slice(v, k), x = c.src.slice(k, y);
      if (h(x), C)
        return !0;
      for (b = m; b++, !(b >= $ || (v = c.bMarks[b] + c.tShift[b], y = c.eMarks[b], v < y && c.sCount[b] < c.blkIndent)); )
        if (n === c.src.charCodeAt(v) && !(c.sCount[b] - c.blkIndent >= 4)) {
          for (k = v + 1; k <= y && t[(k - v) % o] === c.src[k]; k++)
            ;
          if (!(Math.floor((k - v) / o) < H) && (k -= (k - v) % o, k = c.skipSpaces(k), !(k < y))) {
            p = !0;
            break;
          }
        }
      const L = c.parentType, E = c.lineMax;
      return c.parentType = "root", c.lineMax = b, f = c.push("admonition_open", "div", 1), f.markup = N, f.block = !0, f.info = d, f.map = [m, b], f = c.push("admonition_title_open", "p", 1), f.markup = N + " " + d, f.map = [m, b], f = c.push("inline", "", 0), f.content = l, f.map = [m, c.line - 1], f.children = [], f = c.push("admonition_title_close", "p", -1), f.markup = N + " " + d, c.md.block.tokenize(c, m + 1, b), f = c.push("admonition_close", "div", -1), f.markup = c.src.slice(v, k), f.block = !0, c.parentType = L, c.lineMax = E, c.line = b + (p ? 1 : 0), !0;
    },
    {
      alt: ["paragraph", "reference", "blockquote", "list"]
    }
  ), e.renderer.rules.admonition_open = u, e.renderer.rules.admonition_title_open = u, e.renderer.rules.admonition_title_close = u, e.renderer.rules.admonition_close = u;
}, wl = $l, yl = (e, r) => {
  let i;
  e.core.ruler.push("headingLinks", (t) => {
    i || (i = t.Token);
  }), e.renderer.rules.heading_open = (t, n) => {
    const o = t[n], d = t[n + 1].content, l = o.markup.length;
    return r.headsRef.current.push({
      text: d,
      level: l
    }), o.map && o.level === 0 && (o.attrSet("data-line", String(o.map[0])), o.attrSet(
      "id",
      r.mdHeadingId(d, l, r.headsRef.current.length)
    )), e.renderer.renderToken(t, n, r);
  }, e.renderer.rules.heading_close = (t, n, o, d, l) => l.renderToken(t, n, o);
}, Tl = yl, xl = (e, r) => {
  const i = e.renderer.rules.fence, t = e.utils.unescapeAll, n = /\[(\w*)(?::([\w ]*))?\]/;
  function o(h) {
    return h.info ? t(h.info).trim() : "";
  }
  function d(h) {
    const c = o(h), [m = null, $ = ""] = (n.exec(c) || []).slice(1);
    return [m, $];
  }
  function l(h) {
    const c = o(h);
    return c ? c.split(/(\s+)/g)[0] : "";
  }
  const u = (h, c, m, $, C) => {
    if (h[c].hidden)
      return "";
    const [k, b] = d(h[c]);
    if (k === null)
      return i(h, c, m, $, C);
    let f, p, v, y, H = "", N = "";
    for (let x = c; x < h.length && (f = h[x], [p, v] = d(f), p === k); x++)
      f.info = f.info.replace(n, ""), f.hidden = !0, y = x - c > 0 ? "" : " checked", H += `<li><input type="radio" name="label-group-${r.editorId}-${c}"${y}><label for="group-${r.editorId}-${c}-tab-${x - c}" onclick="this.previousElementSibling.click()">${v || l(f)}</label></li>
`, N += `<input type="radio" id="group-${r.editorId}-${c}-tab-${x - c}" name="group-${r.editorId}-${c}"${y}>
` + i(h, x, m, $, C);
    return `<div class="code-tabs">
<ul>
` + H + `</ul>
` + N + "</div>";
  };
  e.renderer.rules.fence = u;
}, Nl = xl, Sl = (e) => {
  [
    "paragraph_open",
    "table_open",
    "ordered_list_open",
    "bullet_list_open",
    "blockquote_open",
    "hr"
  ].forEach((r) => {
    e.renderer.rules[r] = (i, t, n, o, d) => {
      let l;
      return i[t].map && i[t].level === 0 && (l = i[t].map[0], i[t].attrSet("data-line", String(l))), d.renderToken(i, t, n);
    };
  }), ["html_block", "fence"].forEach((r) => {
    const i = e.renderer.rules[r];
    e.renderer.rules[r] = (t, n, o, d, l) => {
      let u;
      const h = i(t, n, o, d, l);
      return t[n].map && t[n].level === 0 ? (u = t[n].map[0], h.replace(/^(<[^>]*)/, `$1 data-line="${u}"`)) : h;
    };
  });
}, Hl = (e, r) => {
  const { onHtmlChanged: i = () => {
  }, onGetCatalog: t = () => {
  } } = e, { editorConfig: n, markdownItConfig: o } = j, { editorId: d, showCodeRowNumber: l, theme: u } = U(B), h = V([]), c = V(u);
  T(() => {
    c.current = u;
  }, [u]);
  const { hljsRef: m, hljsInited: $ } = dl(e), { katexRef: C, katexInited: k } = gl(e), { reRender: b, replaceMermaid: f } = ml(e), [p] = D(() => {
    const x = Er({
      html: !0,
      breaks: !0
    });
    return o(x), x.use(Cl, { katexRef: C }), x.use(Ar, { figcaption: !0 }), x.use(wl), x.use(Dr), x.use(Tl, { mdHeadingId: e.mdHeadingId, headsRef: h }), x.use(Nl, { editorId: d }), e.noMermaid || x.use(bl, { themeRef: c, noMermaid: e.noMermaid }), x.set({
      highlight: (L, E) => {
        let P;
        !e.noHighlight && m.current ? m.current.getLanguage(E) ? P = m.current.highlight(L, {
          language: E,
          ignoreIllegals: !0
        }).value : P = m.current.highlightAuto(L).value : P = p.utils.escapeHtml(L);
        const K = l ? vr(P.trim()) : `<span class="code-block">${P.trim()}</span>`;
        return `<pre><code class="language-${E}" language=${E}>${K}</code></pre>`;
      }
    }), Sl(x), x;
  }), [v, y] = D(() => e.sanitize(p.render(e.value))), H = O(() => (e.noHighlight || $) && (e.noKatex || k), [$, k]), N = V(!0);
  return T(() => {
    w.emit(d, "buildFinished", v), i(v), t(h.current), w.emit(d, "catalogChanged", h.current);
  }, [v]), T(() => {
    if (N.current) {
      N.current = !1;
      return;
    }
    const x = setTimeout(
      () => {
        h.current = [];
        const L = e.sanitize(p.render(e.value));
        y(L);
      },
      (n == null ? void 0 : n.renderDelay) !== void 0 ? n == null ? void 0 : n.renderDelay : r ? 0 : 500
    );
    return () => {
      clearTimeout(x);
    };
  }, [e.value, H, u]), T(() => {
    f();
  }, [v, b]), T(() => {
    w.on(d, {
      name: "pushCatalog",
      callback() {
        w.emit(d, "catalogChanged", h.current);
      }
    });
  }, []), { html: v };
}, Ml = Hl, dr = (e) => {
  const { editorId: r, previewTheme: i, showCodeRowNumber: t } = U(B), { html: n } = Ml(e, !!e.previewOnly);
  return cl(e, n), il(e, n), /* @__PURE__ */ F($e, { children: [
    /* @__PURE__ */ a(
      "div",
      {
        id: `${r}-preview-wrapper`,
        className: `${s}-preview-wrapper`,
        "data-show": e.setting.preview,
        children: /* @__PURE__ */ a(
          "article",
          {
            id: `${r}-preview`,
            className: Se([
              `${s}-preview`,
              `${i}-theme`,
              t && `${s}-scrn`
            ]),
            dangerouslySetInnerHTML: { __html: n }
          }
        )
      },
      "content-preview-wrapper"
    ),
    !e.previewOnly && /* @__PURE__ */ a(
      "div",
      {
        id: `${r}-html-wrapper`,
        className: `${s}-preview-wrapper`,
        "data-show": e.setting.htmlPreview,
        children: /* @__PURE__ */ a("div", { className: `${s}-html`, children: n })
      },
      "html-preview-wrapper"
    )
  ] });
};
dr.defaultProps = {
  previewOnly: !1
};
const Ll = (e) => {
  const [r, i] = D(""), { inputWrapperRef: t, codeMirrorUt: n } = ll(e);
  return wn(e, r, n), /* @__PURE__ */ F("div", { className: `${s}-content`, children: [
    /* @__PURE__ */ a("div", { className: `${s}-input-wrapper`, ref: t }),
    /* @__PURE__ */ a(
      dr,
      {
        value: e.value,
        setting: e.setting,
        onHtmlChanged: (o) => {
          i(o), e.onHtmlChanged(o);
        },
        onGetCatalog: e.onGetCatalog,
        mdHeadingId: e.mdHeadingId,
        noMermaid: e.noMermaid,
        sanitize: e.sanitize,
        noKatex: e.noKatex,
        formatCopiedText: e.formatCopiedText,
        noHighlight: e.noHighlight
      },
      "display-editor"
    )
  ] });
}, Il = Ne.memo(Ll), El = ({ modelValue: e }) => {
  const { usedLanguageText: r } = U(B);
  return O(() => {
    var i;
    return /* @__PURE__ */ F("div", { className: `${s}-footer-item`, children: [
      /* @__PURE__ */ a("label", { className: `${s}-footer-label`, children: `${(i = r.footer) == null ? void 0 : i.markdownTotal}:` }),
      /* @__PURE__ */ a("span", { children: e.length || 0 })
    ] });
  }, [r, e]);
}, Al = (e) => /* @__PURE__ */ a(
  "div",
  {
    className: Se([
      `${s}-checkbox`,
      e.checked && `${s}-checkbox-checked`
    ]),
    onClick: () => {
      e.onChange(!e.checked);
    }
  }
), Dl = (e) => {
  var i;
  const { usedLanguageText: r } = U(B);
  return O(() => {
    var t;
    return /* @__PURE__ */ F("div", { className: `${s}-footer-item`, children: [
      /* @__PURE__ */ a(
        "label",
        {
          className: `${s}-footer-label`,
          onClick: () => {
            e.onScrollAutoChange(!e.scrollAuto);
          },
          children: (t = r.footer) == null ? void 0 : t.scrollAuto
        }
      ),
      /* @__PURE__ */ a(Al, { checked: e.scrollAuto, onChange: e.onScrollAutoChange })
    ] });
  }, [(i = r.footer) == null ? void 0 : i.scrollAuto, e]);
}, Pl = (e) => {
  const r = A(
    (n) => {
      if (xr.includes(n))
        switch (n) {
          case "markdownTotal":
            return /* @__PURE__ */ a(El, { modelValue: e.modelValue }, "markdown-total");
          case "scrollSwitch":
            return /* @__PURE__ */ a(
              Dl,
              {
                scrollAuto: e.scrollAuto,
                onScrollAutoChange: e.onScrollAutoChange
              },
              "scroll-auto"
            );
        }
      else
        return e.defFooters[n] || "";
    },
    [e.modelValue, e.scrollAuto, e.onScrollAutoChange, e.defFooters]
  ), [i, t] = O(() => {
    const n = e.footers.indexOf("="), o = n === -1 ? e.footers : e.footers.slice(0, n), d = n === -1 ? [] : e.footers.slice(n, Number.MAX_SAFE_INTEGER);
    return [
      o.map((l) => r(l)),
      d.map((l) => r(l))
    ];
  }, [e.footers, r]);
  return /* @__PURE__ */ F("div", { className: `${s}-footer`, children: [
    /* @__PURE__ */ a("div", { className: `${s}-footer-left`, children: i }),
    /* @__PURE__ */ a("div", { className: `${s}-footer-right`, children: t })
  ] });
}, Rl = Ne.memo(Pl), B = fr({
  editorId: "",
  tabWidth: 2,
  theme: "light",
  highlight: {
    css: "",
    js: ""
  },
  showCodeRowNumber: !1,
  usedLanguageText: xe["zh-CN"],
  previewTheme: "default"
}), Fl = br((e, r) => {
  const {
    modelValue: i = S.modelValue,
    theme: t = S.theme,
    className: n = S.className,
    toolbars: o = S.toolbars,
    toolbarsExclude: d = S.toolbarsExclude,
    defToolbars: l = S.defToolbars,
    editorId: u = S.editorId,
    tabWidth: h = S.tabWidth,
    showCodeRowNumber: c = S.showCodeRowNumber,
    previewTheme: m = S.previewTheme,
    noPrettier: $ = S.noPrettier,
    tableShape: C = S.tableShape,
    noMermaid: k = S.noMermaid,
    noKatex: b = S.noKatex,
    placeholder: f = S.placeholder,
    onChange: p = S.onChange,
    onHtmlChanged: v = S.onHtmlChanged,
    onGetCatalog: y = S.onGetCatalog,
    sanitize: H = S.sanitize,
    onError: N = S.onError,
    mdHeadingId: x = S.mdHeadingId,
    footers: L = S.footers,
    defFooters: E = S.defFooters,
    noIconfont: P = S.noIconfont,
    noUploadImg: K = S.noUploadImg,
    noHighlight: G = S.noHighlight
  } = e, [M] = D(() => ({
    editorId: u,
    noKatex: b,
    noMermaid: k,
    noPrettier: $,
    noUploadImg: K,
    noIconfont: P,
    noHighlight: G
  })), [Q, Y] = D(() => ({
    scrollAuto: e.scrollAuto === void 0 ? !0 : e.scrollAuto
  })), se = A(
    (z) => {
      Y((W) => ({
        ...W,
        scrollAuto: z
      }));
    },
    [Y]
  );
  Zr(e, M), Yr(M), Qr(e, M), Xr(M.editorId, N);
  const ne = en(e, M), [le, ee, J, te] = tn(e);
  return rn(r, M, ne, J, te), T(() => () => {
    w.clear(u);
  }, []), /* @__PURE__ */ a(
    B.Provider,
    {
      value: {
        editorId: M.editorId,
        tabWidth: h,
        theme: t,
        highlight: le,
        showCodeRowNumber: c,
        usedLanguageText: ee,
        previewTheme: m
      },
      children: /* @__PURE__ */ F(
        "div",
        {
          id: M.editorId,
          className: Se([
            s,
            n,
            t === "dark" && `${s}-dark`,
            J.fullscreen || J.pageFullscreen ? `${s}-fullscreen` : ""
          ]),
          style: e.style,
          children: [
            /* @__PURE__ */ a(
              kn,
              {
                noPrettier: M.noPrettier,
                toolbars: o,
                toolbarsExclude: d,
                setting: J,
                updateSetting: te,
                tableShape: C,
                defToolbars: l,
                noUploadImg: M.noUploadImg
              }
            ),
            /* @__PURE__ */ a(
              Il,
              {
                value: i,
                onChange: p,
                setting: J,
                mdHeadingId: x,
                onHtmlChanged: v,
                onGetCatalog: y,
                sanitize: H,
                noMermaid: M.noMermaid,
                noPrettier: M.noPrettier,
                noHighlight: M.noHighlight,
                placeholder: f,
                noKatex: M.noKatex,
                scrollAuto: Q.scrollAuto,
                formatCopiedText: e.formatCopiedText,
                autoFocus: e.autoFocus,
                disabled: e.disabled,
                readOnly: e.readOnly,
                maxLength: e.maxLength,
                autoDetectCode: e.autoDetectCode,
                onBlur: e.onBlur,
                onFocus: e.onFocus,
                completions: e.completions
              }
            ),
            (L == null ? void 0 : L.length) > 0 && /* @__PURE__ */ a(
              Rl,
              {
                modelValue: i,
                footers: L,
                defFooters: E,
                scrollAuto: Q.scrollAuto,
                onScrollAutoChange: se
              }
            ),
            ne && /* @__PURE__ */ a(
              Cr,
              {
                theme: t,
                className: `${s}-catalog-editor`,
                editorId: M.editorId,
                mdHeadingId: x
              },
              "internal-catalog"
            )
          ]
        }
      )
    }
  );
}), io = Fl;
export {
  dr as C,
  ue as D,
  io as E,
  tn as a,
  B as b,
  Jr as u
};
