import { a as b, j as a } from "./jsx-runtime.mjs";
import { useState as x, useRef as P, useMemo as $, useEffect as H } from "react";
import { p as s } from "./config.mjs";
import { debounce as w } from "@vavt/util";
const L = (e, c) => {
  const o = (i) => {
    const l = e.parentElement || document.body, u = l.offsetWidth, r = l.offsetHeight, h = document.documentElement.clientWidth, v = document.documentElement.clientHeight, f = i.offsetX, E = i.offsetY, m = (t) => {
      let n = t.x + document.body.scrollLeft - document.body.clientLeft - f, d = t.y + document.body.scrollTop - document.body.clientTop - E;
      n = n < 1 ? 1 : n < h - u - 1 ? n : h - u - 1, d = d < 1 ? 1 : d < v - r - 1 ? d : v - r - 1, c ? c(n, d) : (l.style.left = n + "px", l.style.top = d + "px");
    };
    document.addEventListener("mousemove", m);
    const y = () => {
      document.removeEventListener("mousemove", m), document.removeEventListener("mouseup", y);
    };
    document.addEventListener("mouseup", y);
  };
  return e.addEventListener("mousedown", o), () => {
    e.removeEventListener("mousedown", o);
  };
}, W = (e, c = "") => {
  const o = document.getElementById(e.id), i = e.onload;
  e.onload = null;
  const l = function(u) {
    typeof i == "function" && i.bind(this)(u), e.removeEventListener("load", l);
  };
  o ? c !== "" && (o.addEventListener("load", l), Reflect.get(window, c) && o.dispatchEvent(new Event("load"))) : (e.addEventListener("load", l), document.head.appendChild(e));
}, A = w((e, c, o) => {
  const i = document.getElementById(e);
  i && i.setAttribute(c, o);
}, 10), N = (e) => {
  const { onClose: c = () => {
  } } = e, [o, i] = x(e.visible), [l, u] = x([`${s}-modal`]), r = P(null), h = P(null), [v, f] = x({
    initPos: {
      left: "0px",
      top: "0px"
    },
    historyPos: {
      left: "0px",
      top: "0px"
    }
  }), E = $(() => e.isFullscreen ? {
    width: "100%",
    height: "100%"
  } : {
    width: e.width,
    height: e.height
  }, [e.height, e.isFullscreen, e.width]), [m, y] = x(!1);
  return H(() => {
    let t = () => {
    };
    return e.isFullscreen || (t = L(
      h.current,
      (n, d) => {
        f((g) => ({
          ...g,
          initPos: {
            left: n + "px",
            top: d + "px"
          }
        }));
      }
    )), t;
  }, [m, e.isFullscreen]), H(() => {
    if (o) {
      const t = r.current.offsetWidth / 2, n = r.current.offsetHeight / 2, d = document.documentElement.clientWidth / 2, g = document.documentElement.clientHeight / 2;
      f((C) => ({
        ...C,
        initPos: {
          left: d - t + "px",
          top: g - n + "px"
        }
      })), !m && y(!0);
    }
  }, [m, o]), H(() => {
    const t = e.visible;
    t ? (u(() => [`${s}-modal`, "zoom-in"]), i(t)) : m && (u(() => [`${s}-modal`, "zoom-out"]), setTimeout(() => {
      i(t);
    }, 150));
  }, [m, e.visible]), /* @__PURE__ */ b("div", { className: e.className, style: { display: o ? "block" : "none" }, children: [
    /* @__PURE__ */ a("div", { className: `${s}-modal-mask`, onClick: c }),
    /* @__PURE__ */ b(
      "div",
      {
        className: l.join(" "),
        style: {
          ...v.initPos,
          ...E
        },
        ref: r,
        children: [
          /* @__PURE__ */ a("div", { className: `${s}-modal-header`, ref: h, children: e.title || "" }),
          /* @__PURE__ */ b("div", { className: `${s}-modal-func`, children: [
            e.showAdjust && /* @__PURE__ */ a(
              "div",
              {
                className: `${s}-modal-adjust`,
                onClick: (t) => {
                  t.stopPropagation(), e.isFullscreen ? f((n) => ({
                    ...n,
                    initPos: n.historyPos
                  })) : f((n) => ({
                    historyPos: n.initPos,
                    initPos: {
                      left: "0",
                      top: "0"
                    }
                  })), e.onAdjust instanceof Function && e.onAdjust(!e.isFullscreen);
                },
                children: /* @__PURE__ */ a("svg", { className: `${s}-icon`, "aria-hidden": "true", children: /* @__PURE__ */ a(
                  "use",
                  {
                    xlinkHref: `#md-editor-icon-${e.isFullscreen ? "suoxiao" : "fangda"}`
                  }
                ) })
              }
            ),
            /* @__PURE__ */ a(
              "div",
              {
                className: `${s}-modal-close`,
                onClick: (t) => {
                  t.stopPropagation(), e.onClose && e.onClose();
                },
                children: /* @__PURE__ */ a("svg", { className: `${s}-icon`, "aria-hidden": "true", children: /* @__PURE__ */ a("use", { xlinkHref: "#md-editor-icon-close" }) })
              }
            )
          ] }),
          /* @__PURE__ */ a("div", { className: `${s}-modal-body`, children: e.children })
        ]
      }
    )
  ] });
};
N.defaultProps = {
  onAdjust() {
  }
};
export {
  N as M,
  W as a,
  A as u
};
